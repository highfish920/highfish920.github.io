<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>highfish920的博客</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-11-25T15:35:20.282Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>highfish</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>跨域,同源策略</title>
    <link href="http://yoursite.com/2020/11/25/%E8%B7%A8%E5%9F%9F%20%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"/>
    <id>http://yoursite.com/2020/11/25/%E8%B7%A8%E5%9F%9F%20%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/</id>
    <published>2020-11-25T15:27:59.859Z</published>
    <updated>2020-11-25T15:35:20.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨域-同源策略"><a href="#跨域-同源策略" class="headerlink" title="跨域 同源策略"></a>跨域 同源策略</h2><a id="more"></a><h3 id="什么是浏览器同源策略"><a href="#什么是浏览器同源策略" class="headerlink" title="什么是浏览器同源策略"></a>什么是浏览器同源策略</h3><p>同源策略（Same origin policy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响。可以说 Web 是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。</p><p>它的核心就在于它认为自任何站点装载的信赖内容是不安全的。当被浏览器半信半疑的脚本运行在沙箱时，它们应该只被允许访问来自同一站点的资源，而不是那些来自其它站点可能怀有恶意的资源。</p><p>所谓同源是指：域名、协议、端口相同。</p><p>下表是相对于 <code>http://www.laixiangran.cn/home/index.html</code> 的同源检测结果：<br><img src="https://img-blog.csdnimg.cn/20201125231018169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>另外，同源策略又分为以下两种：</p><ul><li>DOM 同源策略：禁止对不同源页面 DOM 进行操作。这里主要场景是 <code>iframe</code> 跨域的情况，不同域名的 <code>iframe</code> 是限制互相访问的。</li><li><code>XMLHttpRequest</code> 同源策略：禁止使用 XHR 对象向不同源的服务器地址发起 HTTP 请求。<h3 id="为什么要有跨域限制"><a href="#为什么要有跨域限制" class="headerlink" title="为什么要有跨域限制"></a>为什么要有跨域限制</h3>因为存在浏览器同源策略，所以才会有跨域问题。那么浏览器是出于何种原因会有跨域的限制呢。其实不难想到，跨域限制主要的目的就是为了用户的上网安全。</li></ul><p>如果浏览器没有同源策略，会存在什么样的安全问题呢。下面从 DOM 同源策略和 <code>XMLHttpRequest</code> 同源策略来举例说明：</p><p><strong>如果没有 DOM 同源策略，也就是说不同域的 iframe 之间可以相互访问，那么黑客可以这样进行攻击：</strong></p><ol><li>做一个假网站，里面用 iframe 嵌套一个银行网站 <a href="http://mybank.com./">http://mybank.com。</a></li><li>把 iframe 宽高啥的调整到页面全部，这样用户进来除了域名，别的部分和银行的网站没有任何差别。</li><li>这时如果用户输入账号密码，我们的主网站可以跨域访问到 <code>http://mybank.com</code> 的 dom 节点，就可以拿到用户的账户密码了。</li></ol><p><strong>如果 XMLHttpRequest 同源策略，那么黑客可以进行 CSRF（跨站请求伪造） 攻击：</strong></p><ol><li>用户登录了自己的银行页面 <code>http://mybank.com</code>，<code>http://mybank.com</code> 向用户的 cookie 中添加用户标识。</li><li>用户浏览了恶意页面 <a href="http://evil.com,执行了页面中的恶意/">http://evil.com，执行了页面中的恶意</a> AJAX 请求代码。</li><li><code>http://evil.com</code> 向 <code>http://mybank.com</code> 发起 AJAX HTTP 请求，请求会默认把 <code>http://mybank.com </code>对应 cookie 也同时发送过去。</li><li>银行页面从发送的 cookie 中提取用户标识，验证用户无误，response 中返回请求数据。此时数据就泄露了。</li><li>而且由于 Ajax 在后台执行，用户无法感知这一过程。<br>因此，有了浏览器同源策略，我们才能更安全的上网。</li></ol><h3 id="跨域的解决方法"><a href="#跨域的解决方法" class="headerlink" title="跨域的解决方法"></a>跨域的解决方法</h3><p>从上面我们了解到了浏览器同源策略的作用，也正是有了跨域限制，才使我们能安全的上网。但是在实际中，有时候我们需要突破这样的限制，因此下面将介绍几种跨域的解决方法。</p><p><strong>CORS（跨域资源共享）</strong><br><code>CORS</code>（<code>Cross-origin resource sharing</code>，跨域资源共享）是一个 W3C 标准，定义了在必须访问跨域资源时，浏览器与服务器应该如何沟通。CORS 背后的基本思想，就是使用自定义的 HTTP 头部让浏览器与服务器进行沟通，从而决定请求或响应是应该成功，还是应该失败。</p><p>CORS 需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE 浏览器不能低于 IE10。</p><p>整个 CORS 通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS 通信与同源的 AJAX 通信没有差别，代码完全一样。浏览器一旦发现 AJAX 请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。</p><p>因此，实现 CORS 通信的关键是服务器。只要服务器实现了 CORS 接口，就可以跨源通信。</p><p>浏览器将CORS请求分成两类：简单请求（<code>simple request</code>）和非简单请求（<code>not-so-simple request</code>）。</p><p>只要同时满足以下两大条件，就属于简单请求。</p><ol><li>请求方法是以下三种方法之一：</li></ol><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><ol start="2"><li>HTTP的头信息不超出以下几种字段：</li></ol><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type：只限于三个值 application/x-www-form-urlencoded、multipart/form-data、text/plain<br>凡是不同时满足上面两个条件，就属于非简单请求。</li></ul><p>浏览器对这两种请求的处理，是不一样的。</p><p><strong>简单请求</strong></p><ol><li>在请求中需要附加一个额外的 Origin 头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部信息来决定是否给予响应。例如：Origin: <a href="http://www.laixiangran.cn/">http://www.laixiangran.cn</a></li><li>如果服务器认为这个请求可以接受，就在 Access-Control-Allow-Origin 头部中回发相同的源信息（如果是公共资源，可以回发 * ）。例如：<code>Access-Control-Allow-Origin：http://www.laixiangran.cn</code></li><li>没有这个头部或者有这个头部但源信息不匹配，浏览器就会驳回请求。正常情况下，浏览器会处理请求。注意，请求和响应都不包含 cookie 信息。</li><li>如果需要包含 cookie 信息，ajax 请求需要设置 xhr 的属性 <code>withCredentials</code> 为 <code>true</code>，服务器需要设置响应头部 <code>Access-Control-Allow-Credentials: true</code>。</li></ol><p><strong>非简单请求</strong><br>浏览器在发送真正的请求之前，会先发送一个 Preflight 请求给服务器，这种请求使用 OPTIONS 方法，发送下列头部：</p><ul><li>Origin：与简单的请求相同。</li><li>Access-Control-Request-Method: 请求自身使用的方法。</li><li>Access-Control-Request-Headers: （可选）自定义的头部信息，多个头部以逗号分隔。<br>例如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Origin: http:<span class="comment">//www.laixiangran.cn</span></span><br><span class="line">Access-Control-Request-Method: POST</span><br><span class="line">Access-Control-Request-Headers: NCZ</span><br></pre></td></tr></table></figure><p>发送这个请求后，服务器可以决定是否允许这种类型的请求。服务器通过在响应中发送如下头部与浏览器进行沟通：</p><ul><li>Access-Control-Allow-Origin：与简单的请求相同。</li><li>Access-Control-Allow-Methods: 允许的方法，多个方法以逗号分隔。</li><li>Access-Control-Allow-Headers: 允许的头部，多个方法以逗号分隔。</li><li>Access-Control-Max-Age: 应该将这个 Preflight 请求缓存多长时间（以秒表示）。<br>例如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http:<span class="comment">//www.laixiangran.cn</span></span><br><span class="line">Access-Control-Allow-Methods: GET, POST</span><br><span class="line">Access-Control-Allow-Headers: NCZ</span><br><span class="line">Access-Control-Max-Age: <span class="number">1728000</span></span><br></pre></td></tr></table></figure><p>一旦服务器通过 Preflight 请求允许该请求之后，以后每次浏览器正常的 CORS 请求，就都跟简单请求一样了。</p><p><strong>优点</strong></p><ul><li>CORS 通信与同源的 AJAX 通信没有差别，代码完全一样，容易维护。</li><li>支持所有类型的 HTTP 请求。</li></ul><p><strong>缺点</strong></p><ul><li>存在兼容性问题，特别是 IE10 以下的浏览器。</li><li>第一次发送非简单请求时会多一次请求。</li></ul><p><strong>JSONP 跨域</strong><br>由于 script 标签不受浏览器同源策略的影响，允许跨域引用资源。因此可以通过动态创建 script 标签，然后利用 src 属性进行跨域，这也就是 JSONP 跨域的基本原理。</p><p>直接通过下面的例子来说明 JSONP 实现跨域的流程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 定义一个 回调函数 handleResponse 用来接收返回的数据</span></span><br><span class="line"><span class="function">function <span class="title">handleResponse</span><span class="params">(data)</span> </span>&#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 动态创建一个 script 标签，并且告诉后端回调函数名叫 handleResponse</span></span><br><span class="line"><span class="keyword">var</span> body = document.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> script = document.gerElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.src = <span class="string">&#x27;http://www.laixiangran.cn/json?callback=handleResponse&#x27;</span>;</span><br><span class="line">body.appendChild(script);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 通过 script.src 请求 `http://www.laixiangran.cn/json?callback=handleResponse`，</span></span><br><span class="line"><span class="comment">// 4. 后端能够识别这样的 URL 格式并处理该请求，然后返回 handleResponse(&#123;&quot;name&quot;: &quot;laixiangran&quot;&#125;) 给浏览器</span></span><br><span class="line"><span class="comment">// 5. 浏览器在接收到 handleResponse(&#123;&quot;name&quot;: &quot;laixiangran&quot;&#125;) 之后立即执行 ，也就是执行 handleResponse 方法，获得后端返回的数据，这样就完成一次跨域请求了。</span></span><br></pre></td></tr></table></figure><p><strong>优点</strong></p><ul><li>使用简便，没有兼容性问题，目前最流行的一种跨域方法。</li></ul><p><strong>缺点</strong></p><ul><li>只支持 GET 请求。</li><li>由于是从其它域中加载代码执行，因此如果其他域不安全，很可能会在响应中夹带一些恶意代码。</li><li>要确定 JSONP 请求是否失败并不容易。虽然 HTML5 给 script 标签新增了一个 onerror 事件处理程序，但是存在兼容性问题。</li></ul><p><strong>图像 Ping 跨域</strong></p><p>由于 img 标签不受浏览器同源策略的影响，允许跨域引用资源。因此可以通过 img 标签的 src 属性进行跨域，这也就是图像 Ping 跨域的基本原理。</p><p>直接通过下面的例子来说明图像 Ping 实现跨域的流程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 onload 及 onerror 事件可以知道响应是什么时候接收到的，但是不能获取响应文本</span></span><br><span class="line">img.onload = img.onerror = function() &#123;</span><br><span class="line">    console.log(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求数据通过查询字符串形式发送</span></span><br><span class="line">img.src = <span class="string">&#x27;http://www.laixiangran.cn/test?name=laixiangran&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>优点</strong></p><ul><li>用于实现跟踪用户点击页面或动态广告曝光次数有较大的优势。</li></ul><p><strong>缺点</strong></p><ul><li>只支持 GET 请求。</li><li>只能浏览器与服务器的单向通信，因为浏览器不能访问服务器的响应文本。</li></ul><p><strong>服务器代理</strong></p><ul><li>浏览器有跨域限制，但是服务器不存在跨域问题，所以可以由服务器请求所要域的资源再返回给客户端。<br>服务器代理是万能的。</li></ul><p><strong>document.domain 跨域</strong></p><p>对于主域名相同，而子域名不同的情况，可以使用 document.domain 来跨域。这种方式非常适用于 iframe 跨域的情况。</p><p>比如，有一个页面，它的地址是 <a href="http://www.laixiangran.cn/a.html%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA%E9%A1%B5%E9%9D%A2%E9%87%8C%E9%9D%A2%E6%9C%89%E4%B8%80%E4%B8%AA">http://www.laixiangran.cn/a.html，在这个页面里面有一个</a> iframe，它的 src 是 <a href="http://laixiangran.cn/b.html%E3%80%82%E5%BE%88%E6%98%BE%E7%84%B6%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%A1%B5%E9%9D%A2%E4%B8%8E%E5%AE%83%E9%87%8C%E9%9D%A2%E7%9A%84">http://laixiangran.cn/b.html。很显然，这个页面与它里面的</a> iframe 框架是不同域的，所以我们是无法通过在页面中书写 js 代码来获取 iframe 中的东西的。</p><p>这个时候，document.domain 就可以派上用场了，我们只要把 <a href="http://www.laixiangran.cn/a.html">http://www.laixiangran.cn/a.html</a> 和 <a href="http://laixiangran.cn/b.html">http://laixiangran.cn/b.html</a> 这两个页面的 document.domain 都设成相同的域名就可以了。但要注意的是，document.domain 的设置是有限制的，我们只能把 document.domain 设置成自身或更高一级的父域，且主域必须相同。例如：a.b.laixiangran.cn 中某个文档的 document.domain 可以设成 a.b.laixiangran.cn、b.laixiangran.cn 、laixiangran.cn 中的任意一个，但是不可以设成 c.a.b.laixiangran.cn ，因为这是当前域的子域，也不可以设成 baidu.com，因为主域已经不相同了。</p><p>例如，在页面 <a href="http://www.laixiangran.cn/a.html">http://www.laixiangran.cn/a.html</a> 中设置document.domain：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;http://laixiangran.cn/b.html&quot;</span> id=<span class="string">&quot;myIframe&quot;</span> onload=<span class="string">&quot;test()&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = <span class="string">&#x27;laixiangran.cn&#x27;</span>; <span class="comment">// 设置成主域</span></span><br><span class="line">    <span class="function">function <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        console.log(document.getElementById(<span class="string">&#x27;myIframe&#x27;</span>).contentWindow);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在页面 <code>http://laixiangran.cn/b.html</code> 中也设置 <code>document.domain</code>，而且这也是必须的，虽然这个文档的 domain 就是 laixiangran.cn，但是还是必须显式地设置 <code>document.domain</code> 的值：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = <span class="string">&#x27;laixiangran.cn&#x27;</span>; <span class="comment">// document.domain 设置成与主页面相同</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这样，<code>http://www.laixiangran.cn/a.html</code> 就可以通过 js 访问到 <code>http://laixiangran.cn/b.html</code> 中的各种属性和对象了。</p><p><strong>window.name 跨域</strong><br>window 对象有个 name 属性，该属性有个特征：即在一个窗口（window）的生命周期内，窗口载入的所有的页面（不管是相同域的页面还是不同域的页面）都是共享一个 window.name 的，每个页面对 window.name 都有读写的权限，window.name 是持久存在一个窗口载入过的所有页面中的，并不会因新页面的载入而进行重置。</p><p>通过下面的例子介绍如何通过 window.name 来跨域获取数据的。</p><p>页面 <code>http://www.laixiangran.cn/a.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;http://laixiangran.cn/b.html&quot;</span> id=<span class="string">&quot;myIframe&quot;</span> onload=<span class="string">&quot;test()&quot;</span> style=<span class="string">&quot;display: none;&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 2. iframe载入 &quot;http://laixiangran.cn/b.html 页面后会执行该函数</span></span><br><span class="line">    <span class="function">function <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> iframe = document.getElementById(<span class="string">&#x27;myIframe&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重置 iframe 的 onload 事件程序，</span></span><br><span class="line">        <span class="comment">// 此时经过后面代码重置 src 之后，</span></span><br><span class="line">        <span class="comment">// http://www.laixiangran.cn/a.html 页面与该 iframe 在同一个源了，可以相互访问了</span></span><br><span class="line">        iframe.onload = function() &#123;</span><br><span class="line">            <span class="keyword">var</span> data = iframe.contentWindow.name; <span class="comment">// 4. 获取 iframe 里的 window.name</span></span><br><span class="line">            console.log(data); <span class="comment">// hello world!</span></span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3. 重置一个与 http://www.laixiangran.cn/a.html 页面同源的页面</span></span><br><span class="line">        iframe.src = <span class="string">&#x27;http://www.laixiangran.cn/c.html&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面 <code>http://laixiangran.cn/b.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="comment">// 1. 给当前的 window.name 设置一个 http://www.laixiangran.cn/a.html 页面想要得到的数据值 </span></span><br><span class="line">    window.name = <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>location.hash 跨域</strong><br>location.hash 方式跨域，是子框架具有修改父框架 src 的 hash 值，通过这个属性进行传递数据，且更改 hash 值，页面不会刷新。但是传递的数据的字节数是有限的。</p><p>页面 <code>http://www.laixiangran.cn/a.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;http://laixiangran.cn/b.html&quot;</span> id=<span class="string">&quot;myIframe&quot;</span> onload=<span class="string">&quot;test()&quot;</span> style=<span class="string">&quot;display: none;&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 2. iframe载入 &quot;http://laixiangran.cn/b.html 页面后会执行该函数</span></span><br><span class="line">    <span class="function">function <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 3. 获取通过 http://laixiangran.cn/b.html 页面设置 hash 值</span></span><br><span class="line">        <span class="keyword">var</span> data = window.location.hash;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面 <code>http://laixiangran.cn/b.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="comment">// 1. 设置父页面的 hash 值</span></span><br><span class="line">    parent.location.hash = <span class="string">&quot;world&quot;</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>postMessage 跨域</strong><br><code>window.postMessage(message，targetOrigin)</code> 方法是 HTML5 新引进的特性，可以使用它来向其它的 window 对象发送消息，无论这个 window 对象是属于同源或不同源。这个应该就是以后解决 dom 跨域通用方法了。</p><p>调用 postMessage 方法的 window 对象是指要接收消息的那一个 window 对象，该方法的第一个参数 message 为要发送的消息，类型只能为字符串；第二个参数 targetOrigin 用来限定接收消息的那个 window 对象所在的域，如果不想限定域，可以使用通配符 *。</p><p>需要接收消息的 window 对象，可是通过监听自身的 message 事件来获取传过来的消息，消息内容储存在该事件对象的 data 属性中。</p><p>页面 <code>http://www.laixiangran.cn/a.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;http://laixiangran.cn/b.html&quot;</span> id=<span class="string">&quot;myIframe&quot;</span> onload=<span class="string">&quot;test()&quot;</span> style=<span class="string">&quot;display: none;&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1. iframe载入 &quot;http://laixiangran.cn/b.html 页面后会执行该函数</span></span><br><span class="line">    <span class="function">function <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 2. 获取 http://laixiangran.cn/b.html 页面的 window 对象，</span></span><br><span class="line">        <span class="comment">// 然后通过 postMessage 向 http://laixiangran.cn/b.html 页面发送消息</span></span><br><span class="line">        <span class="keyword">var</span> iframe = document.getElementById(<span class="string">&#x27;myIframe&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> win = iframe.contentWindow;</span><br><span class="line">        win.postMessage(<span class="string">&#x27;我是来自 http://www.laixiangran.cn/a.html 页面的消息&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面 <code>http://laixiangran.cn/b.html</code> 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="comment">// 注册 message 事件用来接收消息</span></span><br><span class="line">    window.onmessage = function(e) &#123;</span><br><span class="line">        e = e || event; <span class="comment">// 获取事件对象</span></span><br><span class="line">        console.log(e.data); <span class="comment">// 通过 data 属性得到发送来的消息</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/laixiangran/p/9064769.html">https://www.cnblogs.com/laixiangran/p/9064769.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;跨域-同源策略&quot;&gt;&lt;a href=&quot;#跨域-同源策略&quot; class=&quot;headerlink&quot; title=&quot;跨域 同源策略&quot;&gt;&lt;/a&gt;跨域 同源策略&lt;/h2&gt;</summary>
    
    
    
    <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
    <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>对于递归的理解</title>
    <link href="http://yoursite.com/2020/11/10/%E9%80%92%E5%BD%92/"/>
    <id>http://yoursite.com/2020/11/10/%E9%80%92%E5%BD%92/</id>
    <published>2020-11-10T13:33:25.827Z</published>
    <updated>2020-11-10T13:34:03.889Z</updated>
    
    <content type="html"><![CDATA[<h5 id="对于递归的理解"><a href="#对于递归的理解" class="headerlink" title="对于递归的理解"></a>对于递归的理解</h5><a id="more"></a><p>参考：<a href="https://www.zhihu.com/question/31412436">https://www.zhihu.com/question/31412436</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;对于递归的理解&quot;&gt;&lt;a href=&quot;#对于递归的理解&quot; class=&quot;headerlink&quot; title=&quot;对于递归的理解&quot;&gt;&lt;/a&gt;对于递归的理解&lt;/h5&gt;</summary>
    
    
    
    <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="递归" scheme="http://yoursite.com/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>linux--linux--mysql登录错误--mysqladmin connect to server at &#39;localhost&#39; failed</title>
    <link href="http://yoursite.com/2020/11/07/linux10/"/>
    <id>http://yoursite.com/2020/11/07/linux10/</id>
    <published>2020-11-07T02:02:00.835Z</published>
    <updated>2020-11-07T02:44:57.628Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux–linux–mysql登录错误–mysqladmin-connect-to-server-at-‘localhost’-failed"><a href="#Linux–linux–mysql登录错误–mysqladmin-connect-to-server-at-‘localhost’-failed" class="headerlink" title="Linux–linux–mysql登录错误–mysqladmin: connect to server at ‘localhost’ failed"></a>Linux–linux–mysql登录错误–mysqladmin: connect to server at ‘localhost’ failed</h4><a id="more"></a><p>一、mysql登录错误（有关mysql密码登录问题都可用此方法重置密码解决）</p><p>mysqladmin: connect to server at ‘localhost’ failed<br>       error: ‘Access denied for user ‘root’@’localhost’ (using password: YES)’</p><p>解决办法：破解mysql密码</p><p>#&gt; service mysqld stop<br>       #&gt;mysqld_safe –skip-grant-tables &amp; mysql -uroot -p 回车进入<br>       &gt;use mysql;<br>       &gt; update user set password=PASSWORD(“123456”)where user=”root”;<br>       更改密码为123456<br>       &gt; flush privileges; 更新权限<br>       &gt; quit 退出</p><p>service mysqld restart<br>       mysql -uroot -p新密码进入</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;Linux–linux–mysql登录错误–mysqladmin-connect-to-server-at-‘localhost’-failed&quot;&gt;&lt;a href=&quot;#Linux–linux–mysql登录错误–mysqladmin-connect-to-server-at-‘localhost’-failed&quot; class=&quot;headerlink&quot; title=&quot;Linux–linux–mysql登录错误–mysqladmin: connect to server at ‘localhost’ failed&quot;&gt;&lt;/a&gt;Linux–linux–mysql登录错误–mysqladmin: connect to server at ‘localhost’ failed&lt;/h4&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>oracle 11g已经安装好了但没有scott用户，如何创建新的scott用户？</title>
    <link href="http://yoursite.com/2020/10/12/oracle2/"/>
    <id>http://yoursite.com/2020/10/12/oracle2/</id>
    <published>2020-10-12T13:19:01.856Z</published>
    <updated>2020-10-12T13:19:56.876Z</updated>
    
    <content type="html"><![CDATA[<h4 id="oracle-11g已经安装好了但没有scott用户，如何创建新的scott用户？"><a href="#oracle-11g已经安装好了但没有scott用户，如何创建新的scott用户？" class="headerlink" title="oracle 11g已经安装好了但没有scott用户，如何创建新的scott用户？"></a>oracle 11g已经安装好了但没有scott用户，如何创建新的scott用户？</h4><p>首先 用system用户登陆。<br>导入scott.sql脚本（可以在oracle的安装目录的查找），例如我本机的路径，导入就可以写成：<br>@G:\app\85463\product\11.2.0\dbhome_1\RDBMS\ADMIN\scott.sql<br>其次 输入：<br>alter user scott account unlock; 解锁用户<br>alter user scott identified by oracle; 修改scott密码<br>退出在用scott用户登陆<br>show user (看看当前用户是否是scott)<br>select * from emp;<br>检查是否有表<br>用PLSQL Developer查看结果<br>PLSQL Developer<img src="https://img-blog.csdnimg.cn/20201012211735475.png#pic_center" alt="在这里插入图片描述"><br>scott用户创建成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;oracle-11g已经安装好了但没有scott用户，如何创建新的scott用户？&quot;&gt;&lt;a href=&quot;#oracle-11g已经安装好了但没有scott用户，如何创建新的scott用户？&quot; class=&quot;headerlink&quot; title=&quot;oracle 11g</summary>
      
    
    
    
    <category term="Oracle" scheme="http://yoursite.com/categories/Oracle/"/>
    
    
    <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>linux--MapReduce经典案例--数据去重</title>
    <link href="http://yoursite.com/2020/10/11/linux8/"/>
    <id>http://yoursite.com/2020/10/11/linux8/</id>
    <published>2020-10-11T01:34:02.042Z</published>
    <updated>2020-10-11T01:34:37.379Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MapReduce经典案例–数据去重"><a href="#MapReduce经典案例–数据去重" class="headerlink" title="MapReduce经典案例–数据去重"></a>MapReduce经典案例–数据去重</h4><a id="more"></a><p>项目完整代码以及两个test文件以及maven环境所需jar包：<br>链接：<a href="https://pan.baidu.com/s/10MEBxCfy_ShTaCf_RhGzMw">https://pan.baidu.com/s/10MEBxCfy_ShTaCf_RhGzMw</a><br>提取码：1314<br><img src="https://img-blog.csdnimg.cn/20201011093239110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol><li>首先要在windows上搭建开发环境 见<a href="https://blog.csdn.net/weixin_42693712/article/details/108796708">https://blog.csdn.net/weixin_42693712/article/details/108796708</a></li><li>打开本机eclipse，创建一个maven工程</li></ol><ul><li>选择file-&gt;new-&gt;maven project创建maven工程，选择create a simple project选项，点击next GroupId写com.itcast,Artifact写HadoopDemo，其他默认就好</li><li>编辑pom.xml添加依赖，依赖添加成功后，在maven Dependenciens下面自动会有jar包<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="line">    xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">    xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;groupId&gt;com.itcast&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;HadoopDemo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.7.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.7.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.7.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;jdk.tools&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jdk.tools&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.8&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;system&lt;/scope&gt;</span><br><span class="line">            &lt;systemPath&gt;$&#123;JAVA_HOME&#125;/lib/tools.jar&lt;/systemPath&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li>在src下建立com.itcast.hdfsdemo包，建立HDFS_CRUD类以初始化客户端对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itcast.hdfsdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.tools.JavaFileManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.BlockLocation;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.LocatedFileStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.RemoteIterator;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> com.sun.javadoc.DocErrorReporter;</span><br><span class="line"><span class="keyword">import</span> com.sun.javadoc.ProgramElementDoc;</span><br><span class="line"><span class="keyword">import</span> com.sun.javadoc.SourcePosition;</span><br><span class="line"><span class="keyword">import</span> com.sun.tools.doclets.internal.toolkit.Content;</span><br><span class="line"><span class="keyword">import</span> com.sun.tools.doclets.internal.toolkit.WriterFactory;</span><br><span class="line"><span class="keyword">import</span> com.sun.tools.doclets.internal.toolkit.util.MessageRetriever;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HDFS_CRUD</span> </span>&#123;</span><br><span class="line">    FileSystem fs = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//要访问hdfs的url</span></span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration(); </span><br><span class="line">        <span class="comment">//执行hdfs</span></span><br><span class="line">        conf.set(<span class="string">&quot;fs.defaultFS&quot;</span>,<span class="string">&quot;hdfs://gaoyu:9000&quot;</span>);</span><br><span class="line">        <span class="comment">//进行客户端设置</span></span><br><span class="line">        System.setProperty(<span class="string">&quot;HADOOP_USER_NAME&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="comment">//静态方法获取客户端对象</span></span><br><span class="line">        fs = FileSystem.get(conf);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddFileToHdfs</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="comment">//将上传的文件保存在本地路劲</span></span><br><span class="line">        Path src = <span class="keyword">new</span> Path(<span class="string">&quot;D:/test.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//要上川岛hdfs目标路劲</span></span><br><span class="line">        Path dst = <span class="keyword">new</span> Path(<span class="string">&quot;/testFile&quot;</span>);</span><br><span class="line">        <span class="comment">//上传文件方法</span></span><br><span class="line">        fs.copyFromLocalFile(src, dst);</span><br><span class="line">        <span class="comment">//关闭资源</span></span><br><span class="line">        fs.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDownloadFileTolocal</span><span class="params">()</span> <span class="keyword">throws</span> IllegalMonitorStateException,IOException</span>&#123;</span><br><span class="line">        <span class="comment">//下载文件</span></span><br><span class="line">        fs.copyToLocalFile(<span class="keyword">new</span> Path(<span class="string">&quot;/testFile&quot;</span>), <span class="keyword">new</span> Path(<span class="string">&quot;D://&quot;</span>));</span><br><span class="line">        fs.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建删除重命名文件</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMkdirAndDeleteAndRename</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//创建目录</span></span><br><span class="line">        fs.mkdirs(<span class="keyword">new</span> Path(<span class="string">&quot;/a/b/c&quot;</span>));</span><br><span class="line">        fs.mkdirs(<span class="keyword">new</span> Path(<span class="string">&quot;/a2/b2/c2&quot;</span>));</span><br><span class="line">        <span class="comment">//重命名文件或文件夹</span></span><br><span class="line">        fs.rename(<span class="keyword">new</span> Path(<span class="string">&quot;/a&quot;</span>), <span class="keyword">new</span> Path(<span class="string">&quot;/a3&quot;</span>));</span><br><span class="line">        <span class="comment">//删除文件夹</span></span><br><span class="line">        fs.delete(<span class="keyword">new</span> Path(<span class="string">&quot;/a2&quot;</span>),<span class="keyword">true</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testListFiles</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException,IllegalArgumentException,IOException</span>&#123;</span><br><span class="line">        <span class="comment">//获取迭代器对象</span></span><br><span class="line">        RemoteIterator&lt;LocatedFileStatus&gt;listFiles = fs.listFiles(<span class="keyword">new</span> Path(<span class="string">&quot;/&quot;</span>), <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">while</span>(listFiles.hasNext()) &#123;</span><br><span class="line">            LocatedFileStatus fileStatus = listFiles.next();</span><br><span class="line">            <span class="comment">//打印当前文件名</span></span><br><span class="line">            System.out.println(fileStatus.getPath().getName());</span><br><span class="line">            <span class="comment">//打印当前文件块大小</span></span><br><span class="line">            System.out.println(fileStatus.getBlockSize());</span><br><span class="line">            <span class="comment">//打印当前文件权限</span></span><br><span class="line">            System.out.println(fileStatus.getPermission());</span><br><span class="line">            <span class="comment">//打印当前文件内容长度</span></span><br><span class="line">            System.out.println(fileStatus.getLen());</span><br><span class="line">            <span class="comment">//获取文件块信息</span></span><br><span class="line">            BlockLocation[] blockLocations = fileStatus.getBlockLocations();</span><br><span class="line">            <span class="keyword">for</span>(BlockLocation b1 : blockLocations) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;block-length:&quot;</span>+b1.getLength()+<span class="string">&quot;--&quot;</span>+<span class="string">&quot;block-offset:&quot;</span>+b1.getOffset());</span><br><span class="line">                String[] hosts = b1.getHosts();</span><br><span class="line">                <span class="keyword">for</span>(String host : hosts) &#123;</span><br><span class="line">                    System.out.println(host);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;-------------分割线--------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><em>注意：</em></strong><br>gaoyu:9000s是自己设置的在core-site.xml中，自行查看<br><img src="https://img-blog.csdnimg.cn/2020101109084582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其中output在本地目录下不用创建，会自动生成，input目录需要自行创建在相应路劲下，我的是在D:\Dedup\input目录下，和代码中位置需要一直一致<img src="https://img-blog.csdnimg.cn/20201011091125870.png#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20201011090713887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ul><li>创建cn.itcast.mr.dedup包，在该路径下编写自定义Mapper类DedupMapper，自定义Reducer类DedupReducer以及运行主类DedupDriver</li></ul><p>DedupMapper 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mr.dedup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.NullWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DedupMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Text field = <span class="keyword">new</span> Text();</span><br><span class="line">    <span class="comment">// &lt;0,2018-3-3 c&gt;&lt;11,2018-3-4 d&gt;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        field = value;</span><br><span class="line">        context.write(field, NullWritable.get());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// &lt;2018-3-3 c,null&gt; &lt;2018-3-4 d,null&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>DedupReducer类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mr.dedup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.NullWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DedupReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">NullWritable</span>, <span class="title">Text</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// &lt;2018-3-3 c,null&gt; &lt;2018-3-4 d,null&gt;&lt;2018-3-4 d,null&gt;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;NullWritable&gt; values, Context context)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        context.write(key, NullWritable.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>DedupRunner类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mr.dedup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.NullWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DedupRunner</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException </span>&#123;</span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">        Job job = Job.getInstance(conf);</span><br><span class="line"></span><br><span class="line">        job.setJarByClass(DedupRunner.class);</span><br><span class="line">        job.setMapperClass(DedupMapper.class);</span><br><span class="line">        job.setReducerClass(DedupReducer.class);</span><br><span class="line"></span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(NullWritable.class);</span><br><span class="line"></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(<span class="string">&quot;D:\\Dedup\\input&quot;</span>));</span><br><span class="line">        <span class="comment">// 指定处理完成之后的结果所保存的位置</span></span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(<span class="string">&quot;D:\\Dedup\\output&quot;</span>));</span><br><span class="line"></span><br><span class="line">        job.waitForCompletion(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>代码编写完毕后，打开虚拟机开启所有服务进程<code>start-all.sh</code></li><li>然后运行主类DedupRunner，在output目录下查看结果<img src="https://img-blog.csdnimg.cn/20201011091709803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看文件part-r-00000发现已经成功<img src="https://img-blog.csdnimg.cn/20201011091828934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;MapReduce经典案例–数据去重&quot;&gt;&lt;a href=&quot;#MapReduce经典案例–数据去重&quot; class=&quot;headerlink&quot; title=&quot;MapReduce经典案例–数据去重&quot;&gt;&lt;/a&gt;MapReduce经典案例–数据去重&lt;/h4&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse&amp;IDEA中Maven和Git快速配置及使用</title>
    <link href="http://yoursite.com/2020/10/03/Eclipse&amp;IDEA%E4%B8%ADMaven%E5%92%8CGit%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/10/03/Eclipse&amp;IDEA%E4%B8%ADMaven%E5%92%8CGit%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2020-10-03T15:13:02.428Z</published>
    <updated>2020-10-03T15:15:13.618Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Eclipse-amp-IDEA中Maven和Git快速配置及使用"><a href="#Eclipse-amp-IDEA中Maven和Git快速配置及使用" class="headerlink" title="Eclipse&amp;IDEA中Maven和Git快速配置及使用"></a>Eclipse&amp;IDEA中Maven和Git快速配置及使用</h4><a id="more"></a><p>见资料：<br>链接：<a href="https://pan.baidu.com/s/1kzd4_sKwkq9sRTs45HE91Q">https://pan.baidu.com/s/1kzd4_sKwkq9sRTs45HE91Q</a><br>提取码：1314 </p><p>视频：<a href="https://www.bilibili.com/video/BV1Te411W7N6?p=1">https://www.bilibili.com/video/BV1Te411W7N6?p=1</a></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;Eclipse-amp-IDEA中Maven和Git快速配置及使用&quot;&gt;&lt;a href=&quot;#Eclipse-amp-IDEA中Maven和Git快速配置及使用&quot; class=&quot;headerlink&quot; title=&quot;Eclipse&amp;amp;IDEA中Maven和Git快速配置及使用&quot;&gt;&lt;/a&gt;Eclipse&amp;amp;IDEA中Maven和Git快速配置及使用&lt;/h4&gt;</summary>
    
    
    
    <category term="maven" scheme="http://yoursite.com/categories/maven/"/>
    
    
    <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>ECharts数据可视化项目</title>
    <link href="http://yoursite.com/2020/09/26/echarts/"/>
    <id>http://yoursite.com/2020/09/26/echarts/</id>
    <published>2020-09-26T14:05:14.241Z</published>
    <updated>2020-09-26T14:05:52.511Z</updated>
    
    <content type="html"><![CDATA[<h4 id="学习视频：https-www-bilibili-com-video-BV1v7411R7mp-p-1"><a href="#学习视频：https-www-bilibili-com-video-BV1v7411R7mp-p-1" class="headerlink" title="学习视频：https://www.bilibili.com/video/BV1v7411R7mp?p=1"></a>学习视频：<a href="https://www.bilibili.com/video/BV1v7411R7mp?p=1">https://www.bilibili.com/video/BV1v7411R7mp?p=1</a></h4><p>个人博客：<a href="https://highfish920.github.io/">https://highfish920.github.io/</a><br>代码地址：<a href="https://github.com/highfish920/ECharts-">https://github.com/highfish920/ECharts-</a></p><a id="more"></a><p>项目展示<img src="https://img-blog.csdnimg.cn/20200926220304486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;学习视频：https-www-bilibili-com-video-BV1v7411R7mp-p-1&quot;&gt;&lt;a href=&quot;#学习视频：https-www-bilibili-com-video-BV1v7411R7mp-p-1&quot; class=&quot;headerlink&quot; title=&quot;学习视频：https://www.bilibili.com/video/BV1v7411R7mp?p=1&quot;&gt;&lt;/a&gt;学习视频：&lt;a href=&quot;https://www.bilibili.com/video/BV1v7411R7mp?p=1&quot;&gt;https://www.bilibili.com/video/BV1v7411R7mp?p=1&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;个人博客：&lt;a href=&quot;https://highfish920.github.io/&quot;&gt;https://highfish920.github.io/&lt;/a&gt;&lt;br&gt;代码地址：&lt;a href=&quot;https://github.com/highfish920/ECharts-&quot;&gt;https://github.com/highfish920/ECharts-&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="ECharts" scheme="http://yoursite.com/categories/ECharts/"/>
    
    
    <category term="ECharts" scheme="http://yoursite.com/tags/ECharts/"/>
    
  </entry>
  
  <entry>
    <title>linux--基于linux搭建hadoop开发环境</title>
    <link href="http://yoursite.com/2020/09/25/linux7/"/>
    <id>http://yoursite.com/2020/09/25/linux7/</id>
    <published>2020-09-25T11:44:49.224Z</published>
    <updated>2020-09-25T13:36:47.332Z</updated>
    
    <content type="html"><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a></h4><a id="more"></a><p>下载对应jar包，地址<a href="http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/2018-09/R/">http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/2018-09/R/</a><br>网盘：链接：<a href="https://pan.baidu.com/s/1aGlgu5tWf0XIO9H0hxqB0A">https://pan.baidu.com/s/1aGlgu5tWf0XIO9H0hxqB0A</a><br>提取码：1314 </p><ol><li>将下载的jar包上传至虚拟机，解压eclipse<br><img src="https://img-blog.csdnimg.cn/20200925195621994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925195643797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925195706597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看<img src="https://img-blog.csdnimg.cn/20200925195759298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>将eclipse执行文件连接到用户目录<br><img src="https://img-blog.csdnimg.cn/20200925202814127.png#pic_center" alt="在这里插入图片描述"></li></ol><p>创建一个启动项，添加代码<br><img src="https://img-blog.csdnimg.cn/20200925200251247.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925200903935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>安装图形化界面<br>安装桌面组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall -y   &quot;Desktop&quot;   &quot;Desktop Platform&quot;   &quot;Desktop Platform Development&quot; &quot;Fonts&quot; &quot;General Purpose Desktop&quot; &quot;Graphical Administration Tools&quot; &quot;Graphics Creation Tools&quot; &quot;Input Methods&quot; &quot;X Window System&quot; &quot;Chinese Support [zh]&quot; &quot;Internet Browser&quot;</span><br></pre></td></tr></table></figure><p>编辑/etc/inittab文件，修改启级别为5，</p><p>将    id:3:initdefault:    改为     id:5:initdefault:<br>重启 reboot<br>su root 切换到root下 cd退回 init 3到终端  init 5到图形化界面</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h4&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux--基于windows开发hadoop应用程序</title>
    <link href="http://yoursite.com/2020/09/25/linux6/"/>
    <id>http://yoursite.com/2020/09/25/linux6/</id>
    <published>2020-09-25T08:45:11.717Z</published>
    <updated>2020-09-25T11:44:44.924Z</updated>
    
    <content type="html"><![CDATA[<h4 id="所需jar包-链接：https-pan-baidu-com-s-1dV0cocLamZlm5NC89ZjEmQ"><a href="#所需jar包-链接：https-pan-baidu-com-s-1dV0cocLamZlm5NC89ZjEmQ" class="headerlink" title="所需jar包 链接：https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ"></a>所需jar包 链接：<a href="https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ">https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ</a></h4><p>提取码：dasa</p><a id="more"></a><h2 id="基于windows开发hadoop应用程序"><a href="#基于windows开发hadoop应用程序" class="headerlink" title="基于windows开发hadoop应用程序"></a>基于windows开发hadoop应用程序</h2><h3 id="1-搭建hdfs环境"><a href="#1-搭建hdfs环境" class="headerlink" title="1. 搭建hdfs环境"></a>1. 搭建hdfs环境</h3><p>1.1 解压hadoop.tar.gz到一个目录下<br><img src="https://img-blog.csdnimg.cn/20200925145031660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925150058725.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925150216104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>1.2 配置环境变量<br><img src="https://img-blog.csdnimg.cn/20200925145243614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020092514532527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.3 path里面<br><img src="https://img-blog.csdnimg.cn/20200925145424893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.4 打开eclipse的plugins目录<br><img src="https://img-blog.csdnimg.cn/20200925150940174.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925151007157.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925153239948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>1.5 导入后重新启动eclipse</p><p>按下图操作<br><img src="https://img-blog.csdnimg.cn/20200925153522594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>切换到map/reduce，点击小象</p><p><img src="https://img-blog.csdnimg.cn/20200925161248798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><code>vi mapred-site.xml </code><br><img src="https://img-blog.csdnimg.cn/20200925161334337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><code>vi core-site.xml</code><br><img src="https://img-blog.csdnimg.cn/20200925161500860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>配置完如果还报错不用管，忽略即可<br>类似于这样的错误<br><img src="https://img-blog.csdnimg.cn/20200925163409183.png#pic_center" alt="在这里插入图片描述"></p><p>1.6 输入网址（<a href="http://192.168.50.146:50070/explorer.html#/%EF%BC%89%E6%9F%A5%E7%9C%8B%E5%B7%B2%E7%BB%8F%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6">http://192.168.50.146:50070/explorer.html#/）查看已经显示文件</a><br><img src="https://img-blog.csdnimg.cn/20200925154405737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>配置完成查看eclipse里面的树已经显示(第一次不显示，需要新建项目后显示，所以不显示也不要着急)<br>这是显示的树<br><img src="https://img-blog.csdnimg.cn/20200925163537583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="2-基于windows开发hadoop应用程序"><a href="#2-基于windows开发hadoop应用程序" class="headerlink" title="2.基于windows开发hadoop应用程序"></a>2.基于windows开发hadoop应用程序</h2><p><img src="https://img-blog.csdnimg.cn/20200925163720993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925163741142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.1 添加外部扩展jar包，在自己的linux下（这3个jar包）<br><img src="https://img-blog.csdnimg.cn/20200925163945279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以先复制到自己的机器上在添加<br><img src="https://img-blog.csdnimg.cn/20200925164336508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>同理添加以下jar包<br><img src="https://img-blog.csdnimg.cn/20200925165034182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925165216497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925165427140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925165619666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>导入成功<br><img src="https://img-blog.csdnimg.cn/20200925165645162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.2 右键项目新建class<br><img src="https://img-blog.csdnimg.cn/20200925165812811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>类里面的内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWordCount</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span> </span></span><br><span class="line"><span class="class">       <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</span><br><span class="line">      </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context</span></span></span><br><span class="line"><span class="function"><span class="params">                    )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">      StringTokenizer itr = <span class="keyword">new</span> StringTokenizer(value.toString());</span><br><span class="line">      <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class="line">        word.set(itr.nextToken());</span><br><span class="line">        context.write(word, one);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span> </span></span><br><span class="line"><span class="class">       <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>,<span class="title">IntWritable</span>,<span class="title">Text</span>,<span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, </span></span></span><br><span class="line"><span class="function"><span class="params">                       Context context</span></span></span><br><span class="line"><span class="function"><span class="params">                       )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (IntWritable val : values) &#123;</span><br><span class="line">        sum += val.get();</span><br><span class="line">      &#125;</span><br><span class="line">      result.set(sum);</span><br><span class="line">      context.write(key, result);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">    String[] otherArgs = <span class="keyword">new</span> GenericOptionsParser(conf, args).getRemainingArgs();</span><br><span class="line">    <span class="keyword">if</span> (otherArgs.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">      System.err.println(<span class="string">&quot;Usage: wordcount &lt;in&gt; [&lt;in&gt;...] &lt;out&gt;&quot;</span>);</span><br><span class="line">      System.exit(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Job job = Job.getInstance(conf, <span class="string">&quot;word count&quot;</span>);</span><br><span class="line">    job.setJarByClass(MyWordCount.class);</span><br><span class="line">    job.setMapperClass(TokenizerMapper.class);</span><br><span class="line">    job.setCombinerClass(IntSumReducer.class);</span><br><span class="line">    job.setReducerClass(IntSumReducer.class);</span><br><span class="line">    job.setOutputKeyClass(Text.class);</span><br><span class="line">    job.setOutputValueClass(IntWritable.class);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; otherArgs.length - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">      FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(otherArgs[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    FileOutputFormat.setOutputPath(job,</span><br><span class="line">      <span class="keyword">new</span> Path(otherArgs[otherArgs.length - <span class="number">1</span>]));</span><br><span class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200925170402278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925170413332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925170425100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>将导出的jar包放到hadoop目录用户下<br>（在/home/gaoyu（建立的什么就是什么，可能是hadoop）下新建wordcount文件夹，然后将jar包放进去）<br><img src="https://img-blog.csdnimg.cn/20200925171356575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>拖进去<br><img src="https://img-blog.csdnimg.cn/20200925171517586.png#pic_center" alt="在这里插入图片描述"><br>登录hadoop集群的主机，进入刚才的gaoyu目录下，创建两个txt文件，创建txt文件的时候一定要先回车，在按ctrl+c才能保存</p><p><img src="https://img-blog.csdnimg.cn/20200925172520635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200925172537186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>将这两个文件移动到wordcount目录下<br><img src="https://img-blog.csdnimg.cn/20200925172751123.png#pic_center" alt="在这里插入图片描述"><br>并且修改所有属主和属组为gaoyu（有的是hadoop）<br><img src="https://img-blog.csdnimg.cn/20200925173743975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>切换回gaoyu（hadoop）目录，创建input目录，如果存在则不用创建<br><img src="https://img-blog.csdnimg.cn/20200925173927981.png#pic_center" alt="在这里插入图片描述"><br>切回root <code>su root</code></p><p>上传新建的两个文件swpt1和2到input文件下，并查看<br><img src="https://img-blog.csdnimg.cn/20200925174233254.png#pic_center" alt="在这里插入图片描述"><br>删除output目录，以及input目录下其他文件<br><code>hdfs dfs -rmr /output</code><br><img src="https://img-blog.csdnimg.cn/20200925174441451.png#pic_center" alt="在这里插入图片描述"><br><code>hdfs dfs -rm /input/LICENSE.txt</code><br><img src="https://img-blog.csdnimg.cn/20200925174530281.png#pic_center" alt="在这里插入图片描述"><br>删除成功</p><h2 id="3-运行MyWordCount"><a href="#3-运行MyWordCount" class="headerlink" title="3.运行MyWordCount"></a>3.运行MyWordCount</h2><p><img src="https://img-blog.csdnimg.cn/20200925185532528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看网页结果<br><img src="https://img-blog.csdnimg.cn/20200925185638896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;所需jar包-链接：https-pan-baidu-com-s-1dV0cocLamZlm5NC89ZjEmQ&quot;&gt;&lt;a href=&quot;#所需jar包-链接：https-pan-baidu-com-s-1dV0cocLamZlm5NC89ZjEmQ&quot; class=&quot;headerlink&quot; title=&quot;所需jar包 链接：https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ&quot;&gt;&lt;/a&gt;所需jar包 链接：&lt;a href=&quot;https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ&quot;&gt;https://pan.baidu.com/s/1dV0cocLamZlm5NC89ZjEmQ&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;提取码：dasa&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>在编写css文件的时候，less插件保存成wxss或者css方法</title>
    <link href="http://yoursite.com/2020/09/23/css1/"/>
    <id>http://yoursite.com/2020/09/23/css1/</id>
    <published>2020-09-23T02:04:18.432Z</published>
    <updated>2020-09-23T02:05:09.731Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-先安装easy-less-插件"><a href="#1-先安装easy-less-插件" class="headerlink" title="1. 先安装easy less 插件"></a>1. 先安装easy less 插件</h4><a id="more"></a><ol start="2"><li>打开设置》扩展设置》settings.json<br><img src="https://img-blog.csdnimg.cn/20200923100300104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="3."><br>这个地方，如果想要自动保存less后保存为wxss或者css文件就可以在这里修改</li></ol>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;1-先安装easy-less-插件&quot;&gt;&lt;a href=&quot;#1-先安装easy-less-插件&quot; class=&quot;headerlink&quot; title=&quot;1. 先安装easy less 插件&quot;&gt;&lt;/a&gt;1. 先安装easy less 插件&lt;/h4&gt;</summary>
    
    
    
    <category term="Css" scheme="http://yoursite.com/categories/Css/"/>
    
    
    <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Oracle11g数据库卸载</title>
    <link href="http://yoursite.com/2020/09/21/oracle%E5%8D%B8%E8%BD%BD/"/>
    <id>http://yoursite.com/2020/09/21/oracle%E5%8D%B8%E8%BD%BD/</id>
    <published>2020-09-21T13:28:22.323Z</published>
    <updated>2020-09-21T13:28:58.521Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Oracle11g数据库卸载"><a href="#Oracle11g数据库卸载" class="headerlink" title="Oracle11g数据库卸载"></a>Oracle11g数据库卸载</h4><a id="more"></a><ol><li>找到安装目录，找到卸载程序<br><img src="https://img-blog.csdnimg.cn/20200921211522448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200921211538989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>点击卸载产品，选择数据库，点击删除<br>如果点击删除出现警告<br>以cmd管理员运行 把提示的代码粘贴进去回车（最后一个输入y，其他不修改）</li><li>查看服务是否存在，应该是没有了</li><li>进入注册表 <code>regedit</code> 删除注册表 带有oracle的都删了</li><li>删除目录 C盘和安装盘<br><img src="https://img-blog.csdnimg.cn/20200921212123555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200921212150219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>最后一步重启即可<br>实在不行就重装系统吧</li></ol><p>安装oracle 11g网址：<a href="https://editor.csdn.net/md/?articleId=108717666">https://editor.csdn.net/md/?articleId=108717666</a></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;Oracle11g数据库卸载&quot;&gt;&lt;a href=&quot;#Oracle11g数据库卸载&quot; class=&quot;headerlink&quot; title=&quot;Oracle11g数据库卸载&quot;&gt;&lt;/a&gt;Oracle11g数据库卸载&lt;/h4&gt;</summary>
    
    
    
    <category term="Oracle" scheme="http://yoursite.com/categories/Oracle/"/>
    
    
    <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle11g数据库安装</title>
    <link href="http://yoursite.com/2020/09/21/oracle%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/09/21/oracle%E5%AE%89%E8%A3%85/</id>
    <published>2020-09-21T13:25:16.007Z</published>
    <updated>2020-10-21T08:31:31.533Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Oracle11g数据库安装"><a href="#Oracle11g数据库安装" class="headerlink" title="Oracle11g数据库安装"></a>Oracle11g数据库安装</h4><a id="more"></a><hr><p>title: Oracle11g数据库安装<br>tag: Oracle<br>categories:</p><ul><li>Oracle</li></ul><hr><h4 id="Oracle11g数据库安装-1"><a href="#Oracle11g数据库安装-1" class="headerlink" title="Oracle11g数据库安装"></a>Oracle11g数据库安装</h4><!-- more --><p>软件下载地址：链接：<a href="https://pan.baidu.com/s/1NTbQ_mY7SoIhhEbpBr5Nnw">https://pan.baidu.com/s/1NTbQ_mY7SoIhhEbpBr5Nnw</a><br>提取码：dasa<br>oracle11g安装包，以及配套plsql（在资料里面），以及安装说明书<br>链接：<a href="https://pan.baidu.com/s/16CoguszWLh6qBJDsXGckgg">https://pan.baidu.com/s/16CoguszWLh6qBJDsXGckgg</a><br>提取码：1314 </p><p>下载完成并且解压是两个文件夹，复制其中一个文件夹的database文件夹粘贴到另一个文件夹下合并文件夹</p><p>安装前准备</p><ul><li>关闭本机防火墙和电脑管家，360等软件</li><li>断开网络</li></ul><p>开始安装：</p><ol><li>双击setup.exe<br><img src="https://img-blog.csdnimg.cn/20200921195809960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>取消勾选，下一步<br><img src="https://img-blog.csdnimg.cn/20200921200709204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选是<br><img src="https://img-blog.csdnimg.cn/20200921200821793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择安装并配置数据库<br><img src="https://img-blog.csdnimg.cn/20200921200937658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择服务器类型，下一步<br><img src="https://img-blog.csdnimg.cn/20200921201032529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择第一个<br><img src="https://img-blog.csdnimg.cn/20200921201132859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择高级安装<br><img src="https://img-blog.csdnimg.cn/20200921201159468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择语言<br><img src="https://img-blog.csdnimg.cn/20200921201243582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>安企业版本<br><img src="https://img-blog.csdnimg.cn/20200921201324795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><ol start="10"><li>安装目录<br><img src="https://img-blog.csdnimg.cn/2020092120162461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol></li><li>默认一般仓库<br><img src="https://img-blog.csdnimg.cn/20200921201706973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>指定数据库名<br><img src="https://img-blog.csdnimg.cn/20200921202307740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择字符集，样本数据（千万别着急下一步）<br><img src="https://img-blog.csdnimg.cn/20200921202439404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200921202555341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="13."><ol start="13"><li>下一步<br><img src="https://img-blog.csdnimg.cn/20200921202651563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下一步<br><img src="https://img-blog.csdnimg.cn/20200921202717600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下一步<br><img src="https://img-blog.csdnimg.cn/20200921202733865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol></li><li>输入相同口令：oracleadmin<br><img src="https://img-blog.csdnimg.cn/20200921203322537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200921203335377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>完成<br><img src="https://img-blog.csdnimg.cn/20200921203436169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>检查中，如果出现错误提示，忽略即可<br>下载安装<br><img src="https://img-blog.csdnimg.cn/20200921204406732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>等待<img src="https://img-blog.csdnimg.cn/20200921204425913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol><p>会出现一个页面点击确定<br>然后又出现一个页面，选择口令管理<br><img src="https://img-blog.csdnimg.cn/20200921204623192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>口令包括：</p><ul><li>超级管理员 sys / change_on_install</li><li>普通管理员 system / manager</li><li>普通用户 scott / tiger 需要解锁</li><li>大数据用户（样本数据库才有） sh / sh 需要解锁</li><li>如果没有解锁密码就是上面配置的oracleadmin</li></ul><p>下面对应（口令和确认口令是一样的）<br>sys / change_on_install<br>system / manager<br><img src="https://img-blog.csdnimg.cn/20200921205251976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>找到scott取消对勾，输入密码tiger<br><img src="https://img-blog.csdnimg.cn/202009212055417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>找到SH取消对勾输入密码sh<br><img src="https://img-blog.csdnimg.cn/20200921205636202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击确定》是》确定<br>此时oracle软件和数据库安装完成<br>点击关闭<br><img src="https://img-blog.csdnimg.cn/20200921205834956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol start="17"><li>打开服务（确保开机速度）<br>查看<br><img src="https://img-blog.csdnimg.cn/20200921210227554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>把所有的自动改为手动<br><img src="https://img-blog.csdnimg.cn/20200921210431873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>但是每次开启的时候只需要开启两个服务即可<br>OracleOraDb11g_home1TNSListener   监听服务<br>OracleServiceORCL     数据库实例服务</li></ol><p>windows+R 输入 sqlplus 即可启动 输入<br>超级管理员 sys / change_on_install<br>普通管理员 system / manager<br>普通用户 scott / tiger<br>大数据用户（样本数据库才有） sh / sh<br>任何一个即可</p><p>卸载地址： <a href="https://blog.csdn.net/weixin_42693712/article/details/108719409">https://blog.csdn.net/weixin_42693712/article/details/108719409</a></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;Oracle11g数据库安装&quot;&gt;&lt;a href=&quot;#Oracle11g数据库安装&quot; class=&quot;headerlink&quot; title=&quot;Oracle11g数据库安装&quot;&gt;&lt;/a&gt;Oracle11g数据库安装&lt;/h4&gt;</summary>
    
    
    
    <category term="Oracle" scheme="http://yoursite.com/categories/Oracle/"/>
    
    
    <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>linux-安装hadoop集群（伪分布）</title>
    <link href="http://yoursite.com/2020/09/19/linux5/"/>
    <id>http://yoursite.com/2020/09/19/linux5/</id>
    <published>2020-09-19T09:11:42.371Z</published>
    <updated>2020-09-22T02:38:42.139Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装hadoop"><a href="#1-安装hadoop" class="headerlink" title="1. 安装hadoop"></a>1. 安装hadoop</h4><a id="more"></a><h3 id="安装hadoop集群"><a href="#安装hadoop集群" class="headerlink" title="安装hadoop集群"></a>安装hadoop集群</h3><h4 id="1-安装hadoop-1"><a href="#1-安装hadoop-1" class="headerlink" title="1. 安装hadoop"></a>1. 安装hadoop</h4><p>将压缩包复制到/usr目录下<br><img src="https://img-blog.csdnimg.cn/20200916181653488.png#pic_center" alt="在这里插入图片描述"><br>解压 <code>tar -zxvf 压缩包名字 -C /usr</code></p><h4 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h4><p>2.1 查看所有文件<br><br><img src="https://img-blog.csdnimg.cn/20200916182622807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.2 修改<code>hadoop.env.sh</code><br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><img src="https://img-blog.csdnimg.cn/20200916191519637.png#pic_center" alt="在这里插入图片描述"></p><p>配置<br><img src="https://img-blog.csdnimg.cn/20200916202052584.png#pic_center" alt="在这里插入图片描述"></p><p>2.3 配置<code>core-site</code><br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code>vi core-site.xml</code><br><img src="https://img-blog.csdnimg.cn/20200916201335778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/usr/hadoop/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs:<span class="comment">//gaoyu:9000&lt;/value&gt;</span></span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>2.4<br>配置hdfs.site<br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code>vi hdfs-site.xml</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;gaoyu:50070&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;gaoyu2:50090&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/usr/hadoop/name&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.data.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/usr/hadoop/data&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>2.5  配置mapred-site.xml<br>复制模板<br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code> mv mapred-site.xml.template mapred-site.xml</code><br>修改配置<br><code>vi mapred-site.xml</code><br><img src="https://img-blog.csdnimg.cn/20200919152452915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.6 配置yarn-env.sh<br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code>vi yarn-env.sh</code><br><img src="https://img-blog.csdnimg.cn/20200919152749131.png#pic_center" alt="在这里插入图片描述"><br>2.7 配置yarn-site.xml<br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code>vi yarn-site.xml</code><br><img src="https://img-blog.csdnimg.cn/20200919152957416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>2.5 配置slaves<br><code>vi slaves</code><br><br><br><img src="https://img-blog.csdnimg.cn/20200916202751615.png#pic_center" alt="在这里插入图片描述"><br>2.6 配置hadoop环境变量<br>进入<code>/usr/hadoop/etc/hadoop</code>目录下<br><code>vi /etc/profile</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#hadoop environment</span><br><span class="line">export HADOOP_HOME=/usr/hadoop</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br><span class="line">export HADOOP CONF DIR=/usr/hadoop/etc/hadoop/</span><br></pre></td></tr></table></figure><p>刷新：<code>source /etc/profile</code><br>3. 复制文件到其他机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/hadoop gaoyu1:/usr/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/hadoop gaoyu2:/usr/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/profile gaoyu1:/etc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/profile gaoyu2:/etc</span><br></pre></td></tr></table></figure><p>在三台机器上分别操作（root下）<br><img src="https://img-blog.csdnimg.cn/20200922102536516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><code>useradd hadoop</code><br><code>groupadd hadoop</code><br><code>gpasswd -a hadoop hadoop</code><br><code>chown -R hadoop:hadoop /use/hadoop</code><br><code>ll /usr</code><br>其他两台照做一遍</p><p>4.格式化hdfs<img src="https://img-blog.csdnimg.cn/20200916214504660.png#pic_center" alt="在这里插入图片描述"><br>5.启动hdfs<br><code>start-all.sh</code><br><img src="https://img-blog.csdnimg.cn/20200916222525347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>关闭：<code>stop-all.sh</code><br>查看：<img src="https://img-blog.csdnimg.cn/20200916222856304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200919150346397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;1-安装hadoop&quot;&gt;&lt;a href=&quot;#1-安装hadoop&quot; class=&quot;headerlink&quot; title=&quot;1. 安装hadoop&quot;&gt;&lt;/a&gt;1. 安装hadoop&lt;/h4&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux克隆虚拟机以及配置各台虚拟机，包括修改id，ssh免密登录，使用别名登录等</title>
    <link href="http://yoursite.com/2020/09/16/linux4/"/>
    <id>http://yoursite.com/2020/09/16/linux4/</id>
    <published>2020-09-16T10:01:59.547Z</published>
    <updated>2020-09-16T10:02:58.407Z</updated>
    
    <content type="html"><![CDATA[<h5 id="本文配置为hadoop搭建集群做准备，接上篇-linux配置java环境变量https-highfish920-github-io-2020-09-16-linux3"><a href="#本文配置为hadoop搭建集群做准备，接上篇-linux配置java环境变量https-highfish920-github-io-2020-09-16-linux3" class="headerlink" title="本文配置为hadoop搭建集群做准备，接上篇 linux配置java环境变量https://highfish920.github.io/2020/09/16/linux3/"></a>本文配置为hadoop搭建集群做准备，接上篇 linux配置java环境变量<a href="https://highfish920.github.io/2020/09/16/linux3/">https://highfish920.github.io/2020/09/16/linux3/</a></h5><a id="more"></a><h3 id="1-克隆虚拟机"><a href="#1-克隆虚拟机" class="headerlink" title="1.克隆虚拟机"></a>1.克隆虚拟机</h3><h4 id="1-1-选住要克隆的虚拟机-右键》管理》克隆"><a href="#1-1-选住要克隆的虚拟机-右键》管理》克隆" class="headerlink" title="1.1 选住要克隆的虚拟机  右键》管理》克隆"></a>1.1 选住要克隆的虚拟机  右键》管理》克隆<br><img src="https://img-blog.csdnimg.cn/20200916160911927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></h4><p>因为虚拟机是开着的所以无法克隆，所以先关闭虚拟机</p><h4 id="1-2关闭后再次选择克隆即可"><a href="#1-2关闭后再次选择克隆即可" class="headerlink" title="1.2关闭后再次选择克隆即可"></a>1.2关闭后再次选择克隆即可<br><img src="https://img-blog.csdnimg.cn/20200916161035587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></h4><p><img src="https://img-blog.csdnimg.cn/20200916161209120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>选择完整克隆<br><img src="https://img-blog.csdnimg.cn/20200916161313436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>设置名字和路劲<br><img src="https://img-blog.csdnimg.cn/20200916161410439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击完成<br><br><img src="https://img-blog.csdnimg.cn/20200916161533695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在克隆一台<br><br><img src="https://img-blog.csdnimg.cn/20200916161803308.png#pic_center" alt="在这里插入图片描述"><br>接下来启动三台虚拟机</p><h3 id="2-配置克隆的虚拟机"><a href="#2-配置克隆的虚拟机" class="headerlink" title="2.配置克隆的虚拟机"></a>2.配置克隆的虚拟机</h3><p>2.1 开启hadoop2<br><br><img src="https://img-blog.csdnimg.cn/2020091616235625.png#pic_center" alt="在这里插入图片描述"><br>2.2 输入 <code>vi /etc/udev/rules.d/70-persistent-net.rules</code><br><br><img src="https://img-blog.csdnimg.cn/20200916163200349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>修改：删除第一个，第二个把eth1改为eth0<br><img src="https://img-blog.csdnimg.cn/20200916163127599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.3 修改ip地址<br>输入<code>vi /etc/sysconfig/network-scripts/ifcfg-eth0</code><br><br><br><img src="https://img-blog.csdnimg.cn/20200916163720605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>删除HWADDR，修改ip<br><br><img src="https://img-blog.csdnimg.cn/2020091616382131.png#pic_center" alt="在这里插入图片描述"><br>2.4 同理将hadoop3修改，这里修改的ip为192.168.50.148<br><img src="https://img-blog.csdnimg.cn/20200916165218690.png#pic_center" alt="在这里插入图片描述"><br>修改完输入 <code>reboot</code> 重启生效</p><p>测试ping百度也都成功<img src="https://img-blog.csdnimg.cn/20200916170304980.png#pic_center" alt="在这里插入图片描述"></p><h3 id="3-关闭防火墙"><a href="#3-关闭防火墙" class="headerlink" title="3.关闭防火墙"></a>3.关闭防火墙</h3><p>3.1 使用MobaXterm 登录三台虚拟机<br><img src="https://img-blog.csdnimg.cn/20200916170759199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击这个可以同时操作<br><img src="https://img-blog.csdnimg.cn/20200916171015979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>3.2     查看状态 <code> service iptables status</code><br><img src="https://img-blog.csdnimg.cn/20200916171352391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>3.3 关闭防火墙<code>service iptables stop</code><br><img src="https://img-blog.csdnimg.cn/20200916171323630.png#pic_center" alt="在这里插入图片描述"><br>命令：<br><img src="https://img-blog.csdnimg.cn/20200916171407423.png#pic_center" alt="在这里插入图片描述"><br>3.4 彻底关闭防火墙以及查看<br><code>chkconfig iptables off</code><br><code>chkconfig --list iptables</code><br><img src="https://img-blog.csdnimg.cn/20200916171554193.png#pic_center" alt="在这里插入图片描述"></p><h4 id="4-关闭selinux-同样是三台一起操作"><a href="#4-关闭selinux-同样是三台一起操作" class="headerlink" title="4.关闭selinux(同样是三台一起操作)"></a>4.关闭selinux(同样是三台一起操作)</h4><p><code>vi /etc/selinux/config</code><br><img src="https://img-blog.csdnimg.cn/20200916171924852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>重启三台机器 <code>reboot</code></p><h3 id="5-修改主机名"><a href="#5-修改主机名" class="headerlink" title="5.修改主机名"></a>5.修改主机名</h3><p>输入 <code>vi /etc/sysconfig/network</code>将名字改为gaoyu1<br><img src="https://img-blog.csdnimg.cn/20200916172602350.png#pic_center" alt="在这里插入图片描述"><br>同理将hadoop机器改为gaoyu2<br>重启生效</p><h3 id="6-配置别名，用别名访问"><a href="#6-配置别名，用别名访问" class="headerlink" title="6.配置别名，用别名访问"></a>6.配置别名，用别名访问</h3><p>输入<code>vi /etc/hosts</code>配置别名<br><img src="https://img-blog.csdnimg.cn/20200916173339979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>测试通过可以通过名字ping通<br><img src="https://img-blog.csdnimg.cn/20200916173914608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="7-使用ssh免密登录"><a href="#7-使用ssh免密登录" class="headerlink" title="7.使用ssh免密登录"></a>7.使用ssh免密登录</h3><p>三台同时操作生成公钥和私钥<br><code>ssh-keygen -t rsa</code><br>按三次回车即可<br><img src="https://img-blog.csdnimg.cn/20200916174455288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来将第一台机器的秘钥拷贝到这三台机器，下面对第一台机器操作<br>输入<code>ssh-copy-id gaoyu</code>将秘钥拷贝到第一台机器上<br><img src="https://img-blog.csdnimg.cn/20200916174838286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来将其拷贝到其他两台机器<br><img src="https://img-blog.csdnimg.cn/20200916175020562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>测试：<img src="https://img-blog.csdnimg.cn/20200916175423760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其他两台机器同理</p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;本文配置为hadoop搭建集群做准备，接上篇-linux配置java环境变量https-highfish920-github-io-2020-09-16-linux3&quot;&gt;&lt;a href=&quot;#本文配置为hadoop搭建集群做准备，接上篇-linux配置java环境变量https-highfish920-github-io-2020-09-16-linux3&quot; class=&quot;headerlink&quot; title=&quot;本文配置为hadoop搭建集群做准备，接上篇 linux配置java环境变量https://highfish920.github.io/2020/09/16/linux3/&quot;&gt;&lt;/a&gt;本文配置为hadoop搭建集群做准备，接上篇 linux配置java环境变量&lt;a href=&quot;https://highfish920.github.io/2020/09/16/linux3/&quot;&gt;https://highfish920.github.io/2020/09/16/linux3/&lt;/a&gt;&lt;/h5&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux 配置java环境变量</title>
    <link href="http://yoursite.com/2020/09/16/linux3/"/>
    <id>http://yoursite.com/2020/09/16/linux3/</id>
    <published>2020-09-16T05:10:08.443Z</published>
    <updated>2020-09-16T05:10:54.059Z</updated>
    
    <content type="html"><![CDATA[<h5 id="linux配置java环境变量"><a href="#linux配置java环境变量" class="headerlink" title="linux配置java环境变量"></a>linux配置java环境变量</h5><a id="more"></a><p>jdk对应版本 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1--hWO9IORgtywZ0UBquELQ </span><br><span class="line">提取码：vm7w</span><br></pre></td></tr></table></figure><ol><li>先查看本身是否安装有jdk，如有则卸载<br>查看： <code>rpm -qa | grep java</code><br>没有下一步 有卸载<br>如：<img src="https://img-blog.csdnimg.cn/20200916124734230.png#pic_center" alt="在这里插入图片描述"><br>使用 <code>rpm -e --nodeps</code> 名称 卸载</li><li>新建目录 <code>/usr/java</code><br>命令： <code>mkdir /usr/java</code><br>查看是否创建成功 <code>ll /usr</code><br><img src="https://img-blog.csdnimg.cn/20200916125000350.png#pic_center" alt="在这里插入图片描述"></li></ol><p>3.</p><ul><li>利用MobaXterm_CHS工具将jdk复制到此目录下即可</li><li>或者通过命令：先到创建的目录下 <code>cd /usr/java</code><pre><code>                      `pwd` 查看是否在当前目录下                      再利用MobaXterm_CHS工具将jdk复制到此目录下</code></pre><ul><li><code>ll</code> 查看是否上传成功</li></ul><ol start="3"><li>解压 <code>tar -zxvf jdk名字 -C /usr/java</code><img src="https://img-blog.csdnimg.cn/20200916125557405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>配置环境变量<br>打开<code>/etc/profile</code>文件   <code>vi /etc/profile</code>到最底部添加配置</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#new java environment</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_161</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200916130107713.png#pic_center" alt="在这里插入图片描述"><br>刷新配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200916130153791.png#pic_center" alt="在这里插入图片描述"><br>测试：<br>输入 <code>java -version</code> 显示版本为成功<br><img src="https://img-blog.csdnimg.cn/2020091613025025.png#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;linux配置java环境变量&quot;&gt;&lt;a href=&quot;#linux配置java环境变量&quot; class=&quot;headerlink&quot; title=&quot;linux配置java环境变量&quot;&gt;&lt;/a&gt;linux配置java环境变量&lt;/h5&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos6.5安装步骤</title>
    <link href="http://yoursite.com/2020/09/09/linux2/"/>
    <id>http://yoursite.com/2020/09/09/linux2/</id>
    <published>2020-09-09T15:14:02.812Z</published>
    <updated>2020-09-09T15:23:29.106Z</updated>
    
    <content type="html"><![CDATA[<h5 id="centos6-5安装步骤"><a href="#centos6-5安装步骤" class="headerlink" title="centos6.5安装步骤"></a>centos6.5安装步骤</h5><a id="more"></a><ol><li><p>下载centos6.5 网址：<a href="https://blog.csdn.net/huchunlinnk/article/details/45038025">https://blog.csdn.net/huchunlinnk/article/details/45038025</a><hr></p></li><li><p>安装vmware 网址： <a href="https://my.vmware.com/web/vmware/downloads/info/slug/desktop_end_user_computing/vmware_fusion/10_0">https://my.vmware.com/web/vmware/downloads/info/slug/desktop_end_user_computing/vmware_fusion/10_0</a><hr></p></li><li><p>打开vmware 新建虚拟机，选择典型<br><hr><img src="https://img-blog.csdnimg.cn/20200909170531877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>选择稍后安装<br><hr><img src="https://img-blog.csdnimg.cn/20200909170709460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>选择操作系统<br><hr><img src="https://img-blog.csdnimg.cn/20200909170822618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>命名虚拟机以及安装位置<br><hr><img src="https://img-blog.csdnimg.cn/20200909171029368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>默认，下一步<br><hr><img src="https://img-blog.csdnimg.cn/20200909171145383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>完成<br><hr><img src="https://img-blog.csdnimg.cn/20200909171216860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><br><hr><img src="https://img-blog.csdnimg.cn/20200909171257548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>选住虚拟机右键，设置，可配置内存<br><hr><img src="https://img-blog.csdnimg.cn/20200909171356567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>配置CD/DVD  选择自己的镜像位置<br><hr><img src="https://img-blog.csdnimg.cn/20200909171629665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>网络适配器选择NAT<br><hr><img src="https://img-blog.csdnimg.cn/20200909171935596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>选择住自己的虚拟机，点击开启<br><hr><img src="https://img-blog.csdnimg.cn/20200909172035123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>开始安装</strong></p></li><li><p>回车<br><hr><img src="https://img-blog.csdnimg.cn/2020090917223080.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li></ol><p>选择skip<br><hr><img src="https://img-blog.csdnimg.cn/20200909172309792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>next<br><hr><img src="https://img-blog.csdnimg.cn/20200909172941638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>选择中文简体<br><hr><img src="https://img-blog.csdnimg.cn/20200909173044451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>键盘选择美国英语式<br><hr><img src="https://img-blog.csdnimg.cn/20200909173131335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>下一步<br><hr><img src="https://img-blog.csdnimg.cn/2020090917321351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>是，忽略<br><hr><img src="https://img-blog.csdnimg.cn/20200909173239730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>设置主机名<br><hr><img src="https://img-blog.csdnimg.cn/202009091733297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>时区选择上海<br><hr><img src="https://img-blog.csdnimg.cn/20200909173408680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>设置密码123456<br><hr><img src="https://img-blog.csdnimg.cn/20200909173503696.png#pic_center" alt="在这里插入图片描述"><br>无论如何都用<br><hr><img src="https://img-blog.csdnimg.cn/20200909173532309.png#pic_center" alt="在这里插入图片描述"><br><hr><br>自定义分区<br><hr><img src="https://img-blog.csdnimg.cn/20200909173613693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/20200909173821652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>创建<br><hr><img src="https://img-blog.csdnimg.cn/20200909173841985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/20200909173943443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/20200909174016982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/20200909174329381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/2020090917442620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br><img src="https://img-blog.csdnimg.cn/20200909174502472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>格式化<br><hr><img src="https://img-blog.csdnimg.cn/20200909174521853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>选择将修改写入磁盘<br><hr><img src="https://img-blog.csdnimg.cn/20200909174543931.png#pic_center" alt="在这里插入图片描述"><br><hr><br>分区完成，下一步<br><hr><img src="https://img-blog.csdnimg.cn/20200909174618241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>重新引导<br><hr><img src="https://img-blog.csdnimg.cn/20200909174954472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>参考：<a href="https://blog.csdn.net/z1941563559/article/details/80615691">https://blog.csdn.net/z1941563559/article/details/80615691</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;centos6-5安装步骤&quot;&gt;&lt;a href=&quot;#centos6-5安装步骤&quot; class=&quot;headerlink&quot; title=&quot;centos6.5安装步骤&quot;&gt;&lt;/a&gt;centos6.5安装步骤&lt;/h5&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux-Centos6.5 配置地址</title>
    <link href="http://yoursite.com/2020/09/09/linux1/"/>
    <id>http://yoursite.com/2020/09/09/linux1/</id>
    <published>2020-09-09T15:11:30.331Z</published>
    <updated>2020-09-16T05:13:07.958Z</updated>
    
    <content type="html"><![CDATA[<h5 id="CentOS-6-5网络配置静态IP地址"><a href="#CentOS-6-5网络配置静态IP地址" class="headerlink" title="CentOS 6.5网络配置静态IP地址"></a>CentOS 6.5网络配置静态IP地址</h5><a id="more"></a><p>CentOS 6.5网络配置静态IP地址<br>打开VMvare，并进入虚拟机</p><p>CentOS6.5网络配置<br>2<br>输入用户名，按回车键，再输入密码，登录系统</p><p>CentOS6.5网络配置<br>3<br>进行网络配置前，需要确认几个事情：</p><ol><li>网络适配器模式是否为NAT模式</li></ol><p>右键虚拟机，或者点击VMvare菜单栏中的虚拟机（按ctrl+alt键可切出虚拟机返回到windows，点击虚拟机窗口，可进入虚拟机操作）</p><p>点击“设置”<br><img src="https://img-blog.csdnimg.cn/20200909201251787.png#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>4<br>确认网络适配器是否处于NAT模式<br><img src="https://img-blog.csdnimg.cn/20200909201308914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>5<br>2. 确认网关、网段</p><p>点击VMvare虚拟机“编辑”菜单中的“虚拟网络编辑器”<br><img src="https://img-blog.csdnimg.cn/20200909201524495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>6<br>在弹出页面上方列表中选择VMnet8，并点击页面中部的“NAT设置”按钮</p><p>CentOS6.5网络配置<br>7<br>在该页面中，可以查看到网关IP为“192.168.50.2”（各机器有所不同）<br><img src="https://img-blog.csdnimg.cn/2020090920154051.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>CentOS6.5网络配置<br>8<br>关闭网关查看页面，点击页面下方的“DHCP设置”按钮<br><img src="https://img-blog.csdnimg.cn/20200909201607165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr><br>可查看到网络信息</p><p>CentOS6.5网络配置<br>9<br>3. 确认Windows服务启动项中，“VMware DHCP Service”、”VMware NAT Service”，两项服务是否启动</p><p>CentOS6.5网络配置<br>10<br>4. 查看网络和共享中心中的“VMware Network Adapter VMnet8”的状态<br><img src="https://img-blog.csdnimg.cn/20200909201746562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>11<br>其中：</p><p>192.168.50.2 是虚拟路由器的网关地址</p><p>192.168.50.1 是虚拟路由器为Windows分配的地址</p><p>CentOS6.5网络配置<br>12<br>确认完成后，进入CentOS6.5系统中，输入命令“ifconfig”，查看网络信息。</p><p>可以查看到只有一条“lo”，且地址为“127.0.0.1”</p><p>CentOS6.5网络配置<br>配置网络，输入命令“vi  /etc/sysconfig/network-scripts/ifcfg-eth0”</p><p>CentOS6.5网络配置<br>进入文本编辑模式后，可查看到原信息<br><img src="https://img-blog.csdnimg.cn/20200909201859460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>修改信息：</p><p>ONBOOT=yes</p><p>BOOTPROTO=static</p><p>添加信息：</p><p>IPADDR=192.168.50.146（根据网关自行调整）</p><p>NETMASK=255.255.255.0</p><p>GATEWAY=192.168.50.2</p><p>（按“i”键进入编辑模式，按“Esc”键退出编辑模式，在退出编辑模式时，按“zz”保存退出）<br><img src="https://img-blog.csdnimg.cn/20200916111558524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=00:0C:29:3A:AC:12</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=22c2bab6-e7b6-4bde-a2e3-151dd8394d44</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=ststic</span><br><span class="line">IPADDR=192.168.50.146</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.50.2</span><br></pre></td></tr></table></figure><p>CentOS6.5网络配置<br>编辑完成后，输入命令“service network restart”</p><p>CentOS6.5网络配置<br>再次输入“ifconfig”命令，查看网络信息。</p><p>可以看到多了一个“eth0”，并且地址为“192.168.50.146”<br><img src="https://img-blog.csdnimg.cn/20200909202113981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>测试网络是否联通。</p><p>ping网关：输入命令“ping 192.168.50.2”</p><p>pingWindows地址：输入命令“ping 192.168.50.1”</p><p>CentOS6.5网络配置<br>设置DNS服务，输入命令“vi /etc/resolv.conf”</p><p>CentOS6.5网络配置<br>添加内容“nameserver 114.114.114.114”,并保存退出<br><img src="https://img-blog.csdnimg.cn/20200909202150453.png#pic_center" alt="在这里插入图片描述"><br><hr></p><p>CentOS6.5网络配置<br>测试外网是否联通</p><p>输入命令“ping <a href="http://www.baidu.com”/">www.baidu.com”</a><br><img src="https://img-blog.csdnimg.cn/20200909202227853.png#pic_center" alt="在这里插入图片描述"><br><hr><br>配置完成<br>参考：<a href="https://www.cnblogs.com/lucky-man/p/7111920.html">https://www.cnblogs.com/lucky-man/p/7111920.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;CentOS-6-5网络配置静态IP地址&quot;&gt;&lt;a href=&quot;#CentOS-6-5网络配置静态IP地址&quot; class=&quot;headerlink&quot; title=&quot;CentOS 6.5网络配置静态IP地址&quot;&gt;&lt;/a&gt;CentOS 6.5网络配置静态IP地址&lt;/h5&gt;</summary>
    
    
    
    <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>设计模式---策略模式</title>
    <link href="http://yoursite.com/2020/09/06/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/09/06/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-09-06T14:48:21.364Z</published>
    <updated>2020-09-06T14:49:01.448Z</updated>
    
    <content type="html"><![CDATA[<h5 id="策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。"><a href="#策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。" class="headerlink" title="策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。"></a>策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。</h5><a id="more"></a><h3 id="策略模式-前端"><a href="#策略模式-前端" class="headerlink" title="策略模式(前端)"></a>策略模式(前端)</h3><p>下面也是举个例子，现在超市有活动，vip为5折，老客户3折，普通顾客没折，计算***需要支付的金额，如果不使用策略模式，我们的代码可能和下面一样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Price</span>(<span class="params">personType, price</span>) </span>&#123; </span><br><span class="line"> <span class="comment">//vip 5 折 </span></span><br><span class="line"> <span class="keyword">if</span> (personType == <span class="string">&#x27;vip&#x27;</span>) &#123; </span><br><span class="line"> <span class="keyword">return</span> price * <span class="number">0.5</span>; </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (personType == <span class="string">&#x27;old&#x27;</span>)&#123; <span class="comment">//老客户 3 折 </span></span><br><span class="line"> <span class="keyword">return</span> price * <span class="number">0.3</span>; </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line"> <span class="keyword">return</span> price; <span class="comment">//其他都全价 </span></span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>在上面的代码中，我们需要很多个判断，如果有很多优惠，我们又需要添加很多判断，<strong>这里已经违背了刚才说的设计模式的六大原则中的开闭原则了，如果使用策略模式</strong>，我们的代码可以这样写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对于vip客户 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">vipPrice</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.discount = <span class="number">0.5</span>; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">vipPrice.prototype.getPrice = <span class="function"><span class="keyword">function</span>(<span class="params">price</span>) </span>&#123; </span><br><span class="line"> <span class="keyword">return</span> price * <span class="built_in">this</span>.discount; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 对于老客户 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">oldPrice</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.discount = <span class="number">0.3</span>; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">oldPrice.prototype.getPrice = <span class="function"><span class="keyword">function</span>(<span class="params">price</span>) </span>&#123; </span><br><span class="line"> <span class="keyword">return</span> price * <span class="built_in">this</span>.discount; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 对于普通客户 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Price</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.discount = <span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">Price.prototype.getPrice = <span class="function"><span class="keyword">function</span>(<span class="params">price</span>) </span>&#123; </span><br><span class="line"> <span class="keyword">return</span> price ; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 上下文，对于客户端的使用 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Context</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.name = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line"> <span class="built_in">this</span>.strategy = <span class="literal">null</span>; </span><br><span class="line"> <span class="built_in">this</span>.price = <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">Context.prototype.set = <span class="function"><span class="keyword">function</span>(<span class="params">name, strategy, price</span>) </span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.name = name; </span><br><span class="line"> <span class="built_in">this</span>.strategy = strategy; </span><br><span class="line"> <span class="built_in">this</span>.price = price; </span><br><span class="line">&#125; </span><br><span class="line">Context.prototype.getResult = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&#x27; 的结账价为: &#x27;</span> + <span class="built_in">this</span>.strategy.getPrice(<span class="built_in">this</span>.price)); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">var</span> context = <span class="keyword">new</span> Context(); </span><br><span class="line"><span class="keyword">var</span> vip = <span class="keyword">new</span> vipPrice(); </span><br><span class="line">context.set (<span class="string">&#x27;vip客户&#x27;</span>, vip, <span class="number">200</span>); </span><br><span class="line">context.getResult(); <span class="comment">// vip客户 的结账价为: 100 </span></span><br><span class="line"><span class="keyword">var</span> old = <span class="keyword">new</span> oldPrice(); </span><br><span class="line">context.set (<span class="string">&#x27;老客户&#x27;</span>, old, <span class="number">200</span>); </span><br><span class="line">context.getResult(); <span class="comment">// 老客户 的结账价为: 60 </span></span><br><span class="line"><span class="keyword">var</span> Price = <span class="keyword">new</span> Price(); </span><br><span class="line">context.set (<span class="string">&#x27;普通客户&#x27;</span>, Price, <span class="number">200</span>); </span><br><span class="line">context.getResult(); <span class="comment">// 普通客户 的结账价为: 200 </span></span><br></pre></td></tr></table></figure><p><strong>总结</strong>：在上面的代码中，通过策略模式，使得客户的折扣与算法解藕，又使得修改跟扩展能独立的进行，不影到客户端或其他算法的使用。</p><p>当我们的代码中有很多个判断分支，每一个条件分支都会引起该“类”的特定行为以不同的方式作出改变，这个时候就可以使用策略模式，可以改进我们代码的质量，也更好的可以进行单元测试。</p><h3 id="策略模式-后端"><a href="#策略模式-后端" class="headerlink" title="策略模式(后端)"></a>策略模式(后端)</h3><p><img src="https://img-blog.csdnimg.cn/2020090622452363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其中，Context是上下文，用一个ConcreteStrategy来配置，维护一个对Strategy对象的引用；Strategy是策略类，用于定义所有支持算法的公共接口；ConcreteStrategy是具体策略类，封装了具体的算法或行为，继承于Strategy。</p><p>　　1. Context上下文<br>　　Context上下文角色，也叫Context封装角色，起承上启下的作用，屏蔽高层模块对策略、算法的直接访问，封装可能存在的变化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line"> <span class="number">2</span>     </span><br><span class="line"> <span class="number">3</span>     Strategy strategy;</span><br><span class="line"> <span class="number">4</span>     </span><br><span class="line"> <span class="number">5</span>     <span class="function"><span class="keyword">public</span> <span class="title">Context</span><span class="params">(Strategy strategy)</span> </span>&#123;</span><br><span class="line"> <span class="number">6</span>         <span class="keyword">this</span>.strategy = strategy;</span><br><span class="line"> <span class="number">7</span>     &#125;</span><br><span class="line"> <span class="number">8</span>     </span><br><span class="line"> <span class="number">9</span>     <span class="comment">//上下文接口</span></span><br><span class="line"><span class="number">10</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInterface</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">11</span>         strategy.algorithmInterface();</span><br><span class="line"><span class="number">12</span>     &#125;</span><br><span class="line"><span class="number">13</span> </span><br><span class="line"><span class="number">14</span> &#125;</span><br></pre></td></tr></table></figure><p>　　2. 策略角色<br>　　抽象策略角色，是对策略、算法家族的抽象，通常为接口，定义每个策略或算法必须具有的方法和属性。algorithm是“运算法则”的意思。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line"><span class="number">2</span>     </span><br><span class="line"><span class="number">3</span>     <span class="comment">//算法方法</span></span><br><span class="line"><span class="number">4</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">algorithmInterface</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">5</span> </span><br><span class="line"><span class="number">6</span> &#125;</span><br></pre></td></tr></table></figure><p>　　3. 具体策略角色<br>　　用于实现抽象策略中的操作，即实现具体的算法，下方用print代替。测试类共3个ConcreteStrategy，其它两个类与ConcreteStrategyA同理，就不再赘述了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteStrategyA</span> <span class="keyword">extends</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line"><span class="number">2</span> </span><br><span class="line"><span class="number">3</span>     <span class="meta">@Override</span></span><br><span class="line"><span class="number">4</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">algorithmInterface</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">5</span>         System.out.println(<span class="string">&quot;算法A实现&quot;</span>);</span><br><span class="line"><span class="number">6</span>     &#125;</span><br><span class="line"><span class="number">7</span> </span><br><span class="line"><span class="number">8</span> &#125;</span><br></pre></td></tr></table></figure><p>　　4. Client客户端<br>　　下面依次更换策略，测试一下策略模式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"> <span class="number">2</span>     </span><br><span class="line"> <span class="number">3</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> <span class="number">4</span>         Context context;</span><br><span class="line"> <span class="number">5</span>         </span><br><span class="line"> <span class="number">6</span>         context = <span class="keyword">new</span> Context(<span class="keyword">new</span> ConcreteStrategyA());</span><br><span class="line"> <span class="number">7</span>         context.contextInterface();</span><br><span class="line"> <span class="number">8</span>         </span><br><span class="line"> <span class="number">9</span>         context = <span class="keyword">new</span> Context(<span class="keyword">new</span> ConcreteStrategyB());</span><br><span class="line"><span class="number">10</span>         context.contextInterface();</span><br><span class="line"><span class="number">11</span>         </span><br><span class="line"><span class="number">12</span>         context = <span class="keyword">new</span> Context(<span class="keyword">new</span> ConcreteStrategyC());</span><br><span class="line"><span class="number">13</span>         context.contextInterface();</span><br><span class="line"><span class="number">14</span>     &#125;</span><br><span class="line"><span class="number">15</span> </span><br><span class="line"><span class="number">16</span> &#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020090622464769.png#pic_center" alt="在这里插入图片描述"></p><h4 id="策略模式的应用"><a href="#策略模式的应用" class="headerlink" title="策略模式的应用"></a>策略模式的应用</h4><p>　　<strong>1. 何时使用</strong><br>一个系统有许多类，而区分它们的只是他们直接的行为时<br><strong>2. 方法</strong><br>将这些算法封装成一个一个的类，任意的替换<br><strong>3. 优点</strong><br>算法可以自由切换<br>避免使用多重条件判断（如果不用策略模式我们可能会使用多重条件语句，不利于维护）<br>扩展性良好，增加一个策略只需实现接口即可<br><strong>4. 缺点</strong><br>策略类数量会增多，每个策略都是一个类，复用的可能性很小<br>所有的策略类都需要对外暴露<br><strong>5. 使用场景</strong><br>多个类只有算法或行为上稍有不同的场景<br>算法需要自由切换的场景<br>需要屏蔽算法规则的场景<br><strong>6. 应用实例</strong><br>出行方式，自行车、汽车等，每一种出行方式都是一个策略<br>商场促销方式，打折、满减等<br>Java AWT中的LayoutManager，即布局管理器<br><strong>7. 注意事项</strong><br>如果一个系统的策略多于四个，就需要考虑使用混合模式来解决策略类膨胀的问题</p><p>参考： <a href="https://www.cnblogs.com/adamjwh/p/11011095.html">https://www.cnblogs.com/adamjwh/p/11011095.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。&quot;&gt;&lt;a href=&quot;#策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。&quot; class=&quot;headerlink&quot; title=&quot;策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。&quot;&gt;&lt;/a&gt;策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。&lt;/h5&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="策略模式" scheme="http://yoursite.com/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式---观察者模式</title>
    <link href="http://yoursite.com/2020/09/06/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/09/06/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-09-06T09:33:23.387Z</published>
    <updated>2020-09-06T09:35:05.022Z</updated>
    
    <content type="html"><![CDATA[<h5 id="观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。"><a href="#观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。" class="headerlink" title="观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。"></a>观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。</h5><a id="more"></a><h5 id="观察者模式又叫做-发布—订阅模式-，它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知和更新，观察者模式提供了一个订阅模型，其中对象订阅事件并在发生时得到通知，这种模式是事件驱动的编程基石，它有利益于良好的面向对象的设计"><a href="#观察者模式又叫做-发布—订阅模式-，它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知和更新，观察者模式提供了一个订阅模型，其中对象订阅事件并在发生时得到通知，这种模式是事件驱动的编程基石，它有利益于良好的面向对象的设计" class="headerlink" title="观察者模式又叫做 发布—订阅模式 ，它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知和更新，观察者模式提供了一个订阅模型，其中对象订阅事件并在发生时得到通知，这种模式是事件驱动的编程基石，它有利益于良好的面向对象的设计"></a>观察者模式又叫做 <em>发布—订阅模式</em> ，它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知和更新，观察者模式提供了一个订阅模型，其中对象订阅事件并在发生时得到通知，这种模式是事件驱动的编程基石，它有利益于良好的面向对象的设计</h5><h3 id="观察者模式（前端）"><a href="#观察者模式（前端）" class="headerlink" title="观察者模式（前端）"></a>观察者模式（前端）</h3><p><strong>定义</strong>：对象间的一种一对多的依赖关系。</p><p><strong>需求</strong>：当一个对象的状态发生变化时，所有依赖于他的对象都将得到通知。</p><p><strong>优点</strong>：时间上的解耦，对象之间的解耦。</p><p><strong>实现</strong>：</p><p>指定好谁充当发布者;<br>给发布者添加一个缓存列表，用于存放回调函数以便通知订阅者;<br>发布消息的时候，发布者会遍历这个缓存列表，依次触发里面存放的订阅者回调函数。<br>下面举个例子，比如我们给页面中的一个dom节点绑定一个事件，其实就可以看做是一种观察者模式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"> alert(<span class="string">&quot;Hello World&quot;</span>) </span><br><span class="line">&#125;，<span class="literal">false</span> ) </span><br><span class="line"><span class="built_in">document</span>.body.click() <span class="comment">//模拟用户点击 </span></span><br></pre></td></tr></table></figure><p><strong>总结</strong>：在上面的例子中，需要监听用户点击 document.body 的动作，但是我们是没办法预知用户将在什么时候点击的，因此我们订阅了 document.body 的 click 事件，当 body 节点被点击时，body 节点便会向订阅者发布 “Hello World” 消息。</p><h3 id="观察者模式（后端）"><a href="#观察者模式（后端）" class="headerlink" title="观察者模式（后端）"></a>观察者模式（后端）</h3><p><img src="https://img-blog.csdnimg.cn/20200906170819998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MzcxMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其中，Subject类是主题，它把所有对观察者对象的引用文件存在了一个聚集里，每个主题都可以有任何数量的观察者。抽象主题提供了一个接口，可以增加和删除观察者对象；Observer类是抽象观察者，为所有的具体观察者定义一个接口，在得到主题的通知时更新自己；ConcreteSubject类是具体主题，将有关状态存入具体观察者对象，在具体主题内部状态改变时，给所有登记过的观察者发出通知；ConcreteObserver是具体观察者，实现抽象观察者角色所要求的更新接口，以便使本身的状态与主题的状态相协同。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//观察者数组</span></span><br><span class="line">    <span class="keyword">private</span> Vector&lt;Observer&gt; oVector = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加一个观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.oVector.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除一个观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.oVector.remove(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通知所有观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObserver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Observer observer : <span class="keyword">this</span>.oVector) &#123;</span><br><span class="line">            observer.update();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"><span class="number">2</span>     <span class="comment">//更新</span></span><br><span class="line"><span class="number">3</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">4</span> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteSubject</span> <span class="keyword">extends</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//具体业务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="keyword">super</span>.notifyObserver();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteObserver</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收到消息，进行处理&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个主题</span></span><br><span class="line">        ConcreteSubject subject = <span class="keyword">new</span> ConcreteSubject();</span><br><span class="line">        <span class="comment">//定义一个观察者</span></span><br><span class="line">        Observer observer = <span class="keyword">new</span> ConcreteObserver();</span><br><span class="line">        <span class="comment">//观察</span></span><br><span class="line">        subject.addObserver(observer);</span><br><span class="line">        <span class="comment">//开始活动</span></span><br><span class="line">        subject.doSomething();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><br><img src="https://img-blog.csdnimg.cn/2020090617253982.png#pic_center" alt="在这里插入图片描述"></p><h5 id="观察者模式的应用"><a href="#观察者模式的应用" class="headerlink" title="观察者模式的应用"></a>观察者模式的应用</h5><p>　　<strong>1. 何时使用</strong><br>一个对象状态改变，所有的依赖对象都将得到通知<br> 　　<strong>2. 方法</strong><br>使用面向对象技术<br> 　　<strong>3. 优点</strong><br>观察者和被观察者是抽象耦合的<br>建立了一套触发机制<br> 　　<strong>4. 缺点</strong><br>如果一个被观察者对象有很多的直接和间接的观察者的话，将所有的观察者都通知到会花费很多时间<br>如果观察者和观察目标间有循环依赖，可能导致系统崩溃<br>没有相应的机制让观察者知道所观察的目标对象是怎么发生变化的<br> 　　<strong>5. 使用场景</strong><br>关联行为场景<br>事件多级触发场景<br>跨系统的消息变换场景，如消息队列的处理机制<br>　　<strong>6. 应用实例</strong><br>手机丢了，委托别人给其他人发消息通知<br>通知老师/老板来了<br>拍卖，拍卖师观察最高标价，然后通知给其它竞价者竞价<br>在一个目录下建立一个文件，会同时通知目录管理器增加目录，并通知磁盘减少空间，文件是被观察者，目录管理器和磁盘管理器是观察者<br>猫叫了一声，吓着了老鼠，也惊到了主人，猫是被观察者，老鼠和人是观察者<br>　　<strong>7. 注意事项</strong><br>避免循环引用<br>如果顺序执行，某一观察者错误会导致系统卡壳，一般采用异步方式</p><p>参考： <a href="https://www.cnblogs.com/adamjwh/p/10913660.html">https://www.cnblogs.com/adamjwh/p/10913660.html</a></p><p>参考： <a href="https://developer.51cto.com/art/201904/594382.htm">https://developer.51cto.com/art/201904/594382.htm</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。&quot;&gt;&lt;a href=&quot;#观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。&quot; class=&quot;headerlink&quot; title=&quot;观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。&quot;&gt;&lt;/a&gt;观察者一般可以看做是第三者，比如在学校上自习的时候，大家肯定都有过交头接耳、各种玩耍的经历，这时总会有一个“放风”的小伙伴，当老师即将出现时及时“通知”大家老师来了。再比如，拍卖会的时候，大家相互叫价，拍卖师会观察最高标价，然后通知给其它竞价者竞价，这就是一个观察者模式。&lt;/h5&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="观察者模式" scheme="http://yoursite.com/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式---代理模式</title>
    <link href="http://yoursite.com/2020/09/05/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/09/05/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-09-05T09:48:31.563Z</published>
    <updated>2020-09-05T09:49:17.065Z</updated>
    
    <content type="html"><![CDATA[<h4 id="代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。"><a href="#代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。" class="headerlink" title="代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。"></a>代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。</h4><a id="more"></a><h3 id="代理模式-前端"><a href="#代理模式-前端" class="headerlink" title="代理模式(前端)"></a>代理模式(前端)</h3><h4 id="代理模式的定义："><a href="#代理模式的定义：" class="headerlink" title="代理模式的定义："></a>代理模式的定义：</h4><p>代理模式主要是为其他对象提供一种代理以控制对这个对象的访问，主要解决在直接访问对象时带来的问题，比如说：要访问的对象在远程的机器上，在面向对象系统中，有些对象由于某些原因(比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问)，直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对此对象的访问层。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"> <span class="comment">// 示例代码 </span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">// 目标对象，是真正被代理的对象 </span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Subject</span>(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line"> Subject.prototype.request = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;; </span><br><span class="line">  </span><br><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 代理对象 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>realSubject [持有被代理的具体的目标对象] </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Proxy</span>(<span class="params">realSubject</span>)</span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.realSubject = readSubject; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="built_in">Proxy</span>.prototype.request = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"> <span class="built_in">this</span>.realSubject.request(); </span><br><span class="line"> &#125;; </span><br><span class="line">&#125;()); </span><br></pre></td></tr></table></figure><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>在上面的代码中，Proxy可以控制对真正被代理对象的一个访问，在代理模式中，比较常见的就是虚拟代理，虚拟代理用于控制对那种创建开销很大的本体的访问，它会把本体的实例化推迟到有方法被调用的时候，比如说，现在我们假设PublicLibrary的实例化很慢，不能在网页加载的时候立即完成，我们可以为其创建一个虚拟代理，让它把PublicLibrary的实例化推迟到必要的时候，比如说我们在前端中经常用到的图片懒加载，就可以用虚拟代理</p><h3 id="代理模式-后端"><a href="#代理模式-后端" class="headerlink" title="代理模式(后端)"></a>代理模式(后端)</h3><h4 id="为什么要用代理模式"><a href="#为什么要用代理模式" class="headerlink" title="为什么要用代理模式"></a>为什么要用代理模式</h4><p>中介隔离作用：在某些情况下，一个客户类不想或者不能直接引用一个委托对象，而代理类对象可以在客户类和委托对象之间起到中介的作用，其特征是代理类和委托类实现相同的接口。<br>开闭原则，增加功能：代理类除了是客户类和委托类的中介之外，我们还可以通过给代理类增加额外的功能来扩展委托类的功能，这样做我们只需要修改代理类而不需要再修改委托类，符合代码设计的开闭原则。代理类主要负责为委托类预处理消息、过滤消息、把消息转发给委托类，以及事后对返回结果的处理等。代理类本身并不真正实现服务，而是同过调用委托类的相关方法，来提供特定的服务。真正的业务功能还是由委托类来实现，但是可以在业务功能执行的前后加入一些公共的服务。例如我们想给项目加入缓存、日志这些功能，我们就可以使用代理类来完成，而没必要打开已经封装好的委托类。</p><h4 id="分为两种：静态代理、动态代理。"><a href="#分为两种：静态代理、动态代理。" class="headerlink" title="分为两种：静态代理、动态代理。"></a>分为两种：静态代理、动态代理。</h4><h4 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h4><p>是由程序员创建或特定工具自动生成源代码，在对其编译。在程序员运行之前，代理类.class文件就已经被创建了。动态代理是在程序运行时通过反射机制动态创建的。<br>1.静态代理     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> 第一步：创建服务类接口</span><br><span class="line"> <span class="number">1</span> <span class="keyword">package</span> main.java.proxy;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 4  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> 5  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> 6  * <span class="doctag">@Date</span>: 22:40 2018/1/9 0009</span></span><br><span class="line"><span class="comment"> 7  */</span></span><br><span class="line"> <span class="number">8</span> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BuyHouse</span> </span>&#123;</span><br><span class="line"> <span class="number">9</span>     <span class="function"><span class="keyword">void</span> <span class="title">buyHosue</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">10</span> &#125;</span><br></pre></td></tr></table></figure><p>第二步：实现服务接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">import</span> main.java.proxy.BuyHouse;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 4  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> 5  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> 6  * <span class="doctag">@Date</span>: 22:42 2018/1/9 0009</span></span><br><span class="line"><span class="comment"> 7  */</span></span><br><span class="line"> <span class="number">8</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuyHouseImpl</span> <span class="keyword">implements</span> <span class="title">BuyHouse</span> </span>&#123;</span><br><span class="line"> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span>     <span class="meta">@Override</span></span><br><span class="line"><span class="number">11</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buyHosue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">12</span>         System.out.println(<span class="string">&quot;我要买房&quot;</span>);</span><br><span class="line"><span class="number">13</span>     &#125;</span><br><span class="line"><span class="number">14</span> &#125;</span><br></pre></td></tr></table></figure><p>第三步：创建代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">package</span> main.java.proxy.impl;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">import</span> main.java.proxy.BuyHouse;</span><br><span class="line"> <span class="number">4</span> </span><br><span class="line"> <span class="number">5</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 6  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> 7  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> 8  * <span class="doctag">@Date</span>: 22:43 2018/1/9 0009</span></span><br><span class="line"><span class="comment"> 9  */</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuyHouseProxy</span> <span class="keyword">implements</span> <span class="title">BuyHouse</span> </span>&#123;</span><br><span class="line"><span class="number">11</span> </span><br><span class="line"><span class="number">12</span>     <span class="keyword">private</span> BuyHouse buyHouse;</span><br><span class="line"><span class="number">13</span> </span><br><span class="line"><span class="number">14</span>     <span class="function"><span class="keyword">public</span> <span class="title">BuyHouseProxy</span><span class="params">(<span class="keyword">final</span> BuyHouse buyHouse)</span> </span>&#123;</span><br><span class="line"><span class="number">15</span>         <span class="keyword">this</span>.buyHouse = buyHouse;</span><br><span class="line"><span class="number">16</span>     &#125;</span><br><span class="line"><span class="number">17</span> </span><br><span class="line"><span class="number">18</span>     <span class="meta">@Override</span></span><br><span class="line"><span class="number">19</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buyHosue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">20</span>         System.out.println(<span class="string">&quot;买房前准备&quot;</span>);</span><br><span class="line"><span class="number">21</span>         buyHouse.buyHosue();</span><br><span class="line"><span class="number">22</span>         System.out.println(<span class="string">&quot;买房后装修&quot;</span>);</span><br><span class="line"><span class="number">23</span> </span><br><span class="line"><span class="number">24</span>     &#125;</span><br><span class="line"><span class="number">25</span> &#125;</span><br></pre></td></tr></table></figure><p>第四步：编写测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> main.java.proxy.impl.BuyHouseImpl;</span><br><span class="line"><span class="keyword">import</span> main.java.proxy.impl.BuyHouseProxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 22:43 2018/1/9 0009</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BuyHouse buyHouse = <span class="keyword">new</span> BuyHouseImpl();</span><br><span class="line">        buyHouse.buyHosue();</span><br><span class="line">        BuyHouseProxy buyHouseProxy = <span class="keyword">new</span> BuyHouseProxy(buyHouse);</span><br><span class="line">        buyHouseProxy.buyHosue();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="静态代理总结："><a href="#静态代理总结：" class="headerlink" title="静态代理总结："></a>静态代理总结：</h5><p>优点：可以做到在符合开闭原则的情况下对目标对象进行功能扩展。<br>缺点：我们得为每一个服务都得创建代理类，工作量太大，不易管理。同时接口一旦发生改变，代理类也得相应修改。 </p><h4 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h4><p>　　在动态代理中我们不再需要再手动的创建代理类，我们只需要编写一个动态处理器就可以了。真正的代理对象由JDK再运行时为我们动态的来创建。</p><p>第一步：编写动态处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">package</span> main.java.proxy.impl;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"> <span class="number">4</span> <span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 7  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> 8  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> 9  * <span class="doctag">@Date</span>: 20:34 2018/1/12 0012</span></span><br><span class="line"><span class="comment">10  */</span></span><br><span class="line"><span class="number">11</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"><span class="number">12</span> </span><br><span class="line"><span class="number">13</span>     <span class="keyword">private</span> Object object;</span><br><span class="line"><span class="number">14</span> </span><br><span class="line"><span class="number">15</span>     <span class="function"><span class="keyword">public</span> <span class="title">DynamicProxyHandler</span><span class="params">(<span class="keyword">final</span> Object object)</span> </span>&#123;</span><br><span class="line"><span class="number">16</span>         <span class="keyword">this</span>.object = object;</span><br><span class="line"><span class="number">17</span>     &#125;</span><br><span class="line"><span class="number">18</span> </span><br><span class="line"><span class="number">19</span>     <span class="meta">@Override</span></span><br><span class="line"><span class="number">20</span>     <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"><span class="number">21</span>         System.out.println(<span class="string">&quot;买房前准备&quot;</span>);</span><br><span class="line"><span class="number">22</span>         Object result = method.invoke(object, args);</span><br><span class="line"><span class="number">23</span>         System.out.println(<span class="string">&quot;买房后装修&quot;</span>);</span><br><span class="line"><span class="number">24</span>         <span class="keyword">return</span> result;</span><br><span class="line"><span class="number">25</span>     &#125;</span><br><span class="line"><span class="number">26</span> &#125;</span><br></pre></td></tr></table></figure><p>第二步：编写测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">package</span> main.java.proxy.test;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">import</span> main.java.proxy.BuyHouse;</span><br><span class="line"> <span class="number">4</span> <span class="keyword">import</span> main.java.proxy.impl.BuyHouseImpl;</span><br><span class="line"> <span class="number">5</span> <span class="keyword">import</span> main.java.proxy.impl.DynamicProxyHandler;</span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> <span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"> <span class="number">8</span> </span><br><span class="line"> <span class="number">9</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment">10  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment">11  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">12  * <span class="doctag">@Date</span>: 20:38 2018/1/12 0012</span></span><br><span class="line"><span class="comment">13  */</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyTest</span> </span>&#123;</span><br><span class="line"><span class="number">15</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="number">16</span>         BuyHouse buyHouse = <span class="keyword">new</span> BuyHouseImpl();</span><br><span class="line"><span class="number">17</span>         BuyHouse proxyBuyHouse = (BuyHouse) Proxy.newProxyInstance(BuyHouse.class.getClassLoader(), <span class="keyword">new</span></span><br><span class="line"><span class="number">18</span>                 Class[]&#123;BuyHouse.class&#125;, <span class="keyword">new</span> DynamicProxyHandler(buyHouse));</span><br><span class="line"><span class="number">19</span>         proxyBuyHouse.buyHosue();</span><br><span class="line"><span class="number">20</span>     &#125;</span><br><span class="line"><span class="number">21</span> &#125;</span><br></pre></td></tr></table></figure><p> 注意Proxy.newProxyInstance()方法接受三个参数：</p><ul><li>ClassLoader loader:指定当前目标对象使用的类加载器,获取加载器的方法是固定的</li><li>Class&lt;?&gt;[] interfaces:指定目标对象实现的接口的类型,使用泛型方式确认类型</li><li>InvocationHandler:指定动态处理器，执行目标对象的方法时,会触发事件处理器的方法</li></ul><h5 id="动态代理总结："><a href="#动态代理总结：" class="headerlink" title="动态代理总结："></a>动态代理总结：</h5><p>虽然相对于静态代理，动态代理大大减少了我们的开发任务，同时减少了对业务接口的依赖，降低了耦合度。但是还是有一点点小小的遗憾之处，那就是它始终无法摆脱仅支持interface代理的桎梏，因为它的设计注定了这个遗憾。回想一下那些动态生成的代理类的继承关系图，它们已经注定有一个共同的父类叫Proxy。Java的继承机制注定了这些动态代理类们无法实现对class的动态代理，原因是多继承在Java中本质上就行不通。有很多条理由，人们可以否定对 class代理的必要性，但是同样有一些理由，相信支持class动态代理会更美好。接口和类的划分，本就不是很明显，只是到了Java中才变得如此的细化。如果只从方法的声明及是否被定义来考量，有一种两者的混合体，它的名字叫抽象类。实现对抽象类的动态代理，相信也有其内在的价值。此外，还有一些历史遗留的类，它们将因为没有实现任何接口而从此与动态代理永世无缘。如此种种，不得不说是一个小小的遗憾。但是，不完美并不等于不伟大，伟大是一种本质，Java动态代理就是佐例。</p><h4 id="CGLIB代理"><a href="#CGLIB代理" class="headerlink" title="CGLIB代理"></a>CGLIB代理</h4><pre><code>   JDK实现动态代理需要实现类通过接口定义业务方法，对于没有接口的类，如何实现动态代理呢，这就需要CGLib了。CGLib采用了非常底层的字节码技术，其原理是通过字节码技术为一个类创建子类，并在子类中采用方法拦截的技术拦截所有父类方法的调用，顺势织入横切逻辑。但因为采用的是继承，所以不能对final修饰的类进行代理。JDK动态代理与CGLib动态代理均是实现Spring AOP的基础。</code></pre><p>第一步：创建CGLIB代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="keyword">package</span> dan.proxy.impl;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">import</span> net.sf.cglib.proxy.Enhancer;</span><br><span class="line"> <span class="number">4</span> <span class="keyword">import</span> net.sf.cglib.proxy.MethodInterceptor;</span><br><span class="line"> <span class="number">5</span> <span class="keyword">import</span> net.sf.cglib.proxy.MethodProxy;</span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> <span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"> <span class="number">8</span> </span><br><span class="line"> <span class="number">9</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment">10  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment">11  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">12  * <span class="doctag">@Date</span>: 20:38 2018/1/16 0016</span></span><br><span class="line"><span class="comment">13  */</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CglibProxy</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</span><br><span class="line"><span class="number">15</span>     <span class="keyword">private</span> Object target;</span><br><span class="line"><span class="number">16</span>     <span class="function"><span class="keyword">public</span> Object <span class="title">getInstance</span><span class="params">(<span class="keyword">final</span> Object target)</span> </span>&#123;</span><br><span class="line"><span class="number">17</span>         <span class="keyword">this</span>.target = target;</span><br><span class="line"><span class="number">18</span>         Enhancer enhancer = <span class="keyword">new</span> Enhancer();</span><br><span class="line"><span class="number">19</span>         enhancer.setSuperclass(<span class="keyword">this</span>.target.getClass());</span><br><span class="line"><span class="number">20</span>         enhancer.setCallback(<span class="keyword">this</span>);</span><br><span class="line"><span class="number">21</span>         <span class="keyword">return</span> enhancer.create();</span><br><span class="line"><span class="number">22</span>     &#125;</span><br><span class="line"><span class="number">23</span> </span><br><span class="line"><span class="number">24</span>     <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object object, Method method, Object[] args, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"><span class="number">25</span>         System.out.println(<span class="string">&quot;买房前准备&quot;</span>);</span><br><span class="line"><span class="number">26</span>         Object result = methodProxy.invoke(object, args);</span><br><span class="line"><span class="number">27</span>         System.out.println(<span class="string">&quot;买房后装修&quot;</span>);</span><br><span class="line"><span class="number">28</span>         <span class="keyword">return</span> result;</span><br><span class="line"><span class="number">29</span>     &#125;</span><br><span class="line"><span class="number">30</span> &#125;</span><br></pre></td></tr></table></figure><p>第二步：创建测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">package</span> dan.proxy.test;</span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">import</span> dan.proxy.BuyHouse;</span><br><span class="line"> <span class="number">4</span> <span class="keyword">import</span> dan.proxy.impl.BuyHouseImpl;</span><br><span class="line"> <span class="number">5</span> <span class="keyword">import</span> dan.proxy.impl.CglibProxy;</span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 8  * <span class="doctag">@Auther</span>: dan gao</span></span><br><span class="line"><span class="comment"> 9  * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">10  * <span class="doctag">@Date</span>: 20:52 2018/1/16 0016</span></span><br><span class="line"><span class="comment">11  */</span></span><br><span class="line"><span class="number">12</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CglibProxyTest</span> </span>&#123;</span><br><span class="line"><span class="number">13</span>     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="number">14</span>         BuyHouse buyHouse = <span class="keyword">new</span> BuyHouseImpl();</span><br><span class="line"><span class="number">15</span>         CglibProxy cglibProxy = <span class="keyword">new</span> CglibProxy();</span><br><span class="line"><span class="number">16</span>         BuyHouseImpl buyHouseCglibProxy = (BuyHouseImpl) cglibProxy.getInstance(buyHouse);</span><br><span class="line"><span class="number">17</span>         buyHouseCglibProxy.buyHosue();</span><br><span class="line"><span class="number">18</span>     &#125;</span><br><span class="line"><span class="number">19</span> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。&quot;&gt;&lt;a href=&quot;#代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。&quot; class=&quot;headerlink&quot; title=&quot;代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。&quot;&gt;&lt;/a&gt;代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是我们生活中常见的中介。&lt;/h4&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="代理模式" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
